{"ast":null,"code":"import * as axs from './axs'; // export const getUserDataAction = (id) => async (dispatch) => {\n//     try{\n//         const {data} = await axs.getUserDataApi(id); \n//         dispatch ({type: 'USER_DATA', data});\n//     } catch(error) {\n//         console.log(error); \n//     }\n// }\n\nexport const getUsersAction = type => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.getUsersApi(type);\n\n    if (data.message === 'ChatHunt') {\n      dispatch({\n        type: 'GET_USERS',\n        data\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const changeDpAction = dp => async (dispatch, navigate) => {\n  try {\n    const {\n      data\n    } = await axs.changeDpApi(dp);\n    dispatch({\n      type: 'CHANGE_DP',\n      data\n    }); //navigate('/Portfolios');\n\n    window.location.reload(true);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const editProfileAction = (profileFormData, setVisibleErrorProfile, setVisibleSuccessProfile, setLoadingProfile) => async dispatch => {\n  console.log(profileFormData);\n\n  try {\n    const {\n      data\n    } = await axs.editProfileApi(profileFormData);\n    console.log(data);\n\n    if (data.message === 'UsernameTaken' || data.message === 'error') {\n      dispatch({\n        type: 'EDIT_PROFILE',\n        data\n      });\n      setVisibleErrorProfile(true);\n      setLoadingProfile(false);\n    } else if (data.message === 'editedProfile') {\n      console.log(data.message);\n      dispatch({\n        type: 'EDIT_PROFILE',\n        data\n      });\n      setVisibleSuccessProfile(true);\n      window.location.reload(true);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const editSecurityAction = (securityFormData, setVisibleErrorSecurity, setVisibleSuccessSecurity, setLoadingSecurity) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.editSecurityApi(securityFormData); //  dispatch ({type: 'EDIT_SECURITY', data});\n\n    if (data.message === 'error' || data.message === 'WrongPassword' || data.message === 'EmailTaken' || data.message === 'PasswordSame') {\n      dispatch({\n        type: 'EDIT_SECURITY',\n        data\n      });\n      setVisibleErrorSecurity(true);\n      setLoadingSecurity(false);\n    } else if (data.message === 'PasswordEdited' || data.message === 'EmailPasswordEdited' || data.message === 'EmailEdited') {\n      console.log(data.message);\n      dispatch({\n        type: 'EDIT_SECURITY',\n        data\n      });\n      setVisibleSuccessSecurity(true); //window.location.reload(true);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const forgotPasswordAction = (forgotPassFormData, setVisibleError, setVisibleSuccess, setLoading) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.forgotPasswordApi(forgotPassFormData);\n\n    if (data.message === 'error' || data.message === 'NoEmail' || data.message === 'PasswordSame') {\n      dispatch({\n        type: 'FORGOT_PASSWORD',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else if (data.message === 'Success') {\n      console.log(data.message);\n      dispatch({\n        type: 'FORGOT_PASSWORD',\n        data\n      });\n      setVisibleError(false);\n      setVisibleSuccess(true);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getMiniProfileAction = profileName => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.getMiniProfileApi(profileName);\n    dispatch({\n      type: 'GET_MINI_PROFILE',\n      data\n    });\n    console.log('miniprofile fetched');\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const searchMiniProfileAction = (searchedName, setSearchingName, setSearchError) => async dispatch => {\n  try {\n    var _data$userName;\n\n    const {\n      data\n    } = await axs.getMiniProfileApi(searchedName);\n    dispatch({\n      type: 'GET_MINI_PROFILE',\n      data\n    });\n    console.log('miniprofile fetched');\n\n    if (data === 'NO_USER') {\n      setSearchError(true);\n    } else if (((_data$userName = data.userName) === null || _data$userName === void 0 ? void 0 : _data$userName.length) > 0) {\n      setSearchError(false);\n    }\n\n    setSearchingName(false);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const followAction = (followData, setLoadingButtons, socket, setFollowSpam) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.followApi(followData);\n\n    if (data === 'Spam') {\n      setFollowSpam(true);\n      setTimeout(function () {\n        setFollowSpam(false);\n      }, 3000);\n      setLoadingButtons(false);\n    } else {\n      const miniProfile = data.miniProfile;\n      const miniProfileId = data.miniProfile._id;\n      dispatch({\n        type: 'FOLLOW',\n        data: miniProfile\n      });\n      dispatch({\n        type: 'FOLLOW_REDUCER',\n        data: miniProfileId\n      }); //actual follow reducer\n\n      console.log('followed');\n      console.log(data);\n      setLoadingButtons(false); // const socketNotificationData = data.newNotification;\n      //     socket.current.emit(\"sendNotification\", {\n      //         socketNotificationData        \n      //     });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const quickFollowAction = (followData, setLoadingFollow) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.followApi(followData);\n\n    if (data === 'Spam') {\n      return;\n    } else {\n      const miniProfile = data.miniProfile;\n      const miniProfileId = data.miniProfile._id;\n      dispatch({\n        type: 'FOLLOW_REDUCER',\n        data: miniProfileId\n      }); //actual follow reducer\n\n      console.log('follow Reducer');\n      console.log(data);\n      setLoadingFollow(false); // const socketNotificationData = data.newNotification;\n      //     socket.current.emit(\"sendNotification\", {\n      //         socketNotificationData        \n      //     });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const dailyPointsAction = id => async (dispatch, setpopDailyPoints) => {\n  try {\n    const {\n      data\n    } = await axs.dailyPointsApi(id);\n    dispatch({\n      type: 'DAILY_POINTS',\n      data\n    });\n    setpopDailyPoints(false);\n    window.location.reload(true);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const blockAction = (blockData, setBlockSurePop, setBlockError, setLoading, setLoadingButtons) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.blockApi(blockData);\n    console.log(data.message);\n    dispatch({\n      type: 'BLOCK',\n      data\n    });\n    setBlockSurePop(false);\n    setBlockError(true);\n    setTimeout(function () {\n      setBlockError(false);\n    }, 2000);\n    setLoading(false);\n\n    if (data.message === 'error') {\n      setLoadingButtons(false);\n    } //window.location.reload(true);\n\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const populateBlockAction = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.populateBlockApi();\n    console.log(data);\n    dispatch({\n      type: 'POPULATE_BLOCK',\n      data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const unblockAction = (unblockData, setLoadingUnblock, setBlockError) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.unblockApi(unblockData);\n    dispatch({\n      type: 'UNBLOCK',\n      data\n    });\n    console.log(data.message);\n    setBlockError(true);\n    setTimeout(function () {\n      setBlockError(false);\n    }, 2000);\n\n    if (data.message === 'error') {\n      setLoadingUnblock(false);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Midwares/rdx/actions/profileAction.js"],"names":["axs","getUsersAction","type","dispatch","data","getUsersApi","message","error","console","log","changeDpAction","dp","navigate","changeDpApi","window","location","reload","editProfileAction","profileFormData","setVisibleErrorProfile","setVisibleSuccessProfile","setLoadingProfile","editProfileApi","editSecurityAction","securityFormData","setVisibleErrorSecurity","setVisibleSuccessSecurity","setLoadingSecurity","editSecurityApi","forgotPasswordAction","forgotPassFormData","setVisibleError","setVisibleSuccess","setLoading","forgotPasswordApi","getMiniProfileAction","profileName","getMiniProfileApi","searchMiniProfileAction","searchedName","setSearchingName","setSearchError","userName","length","followAction","followData","setLoadingButtons","socket","setFollowSpam","followApi","setTimeout","miniProfile","miniProfileId","_id","quickFollowAction","setLoadingFollow","dailyPointsAction","id","setpopDailyPoints","dailyPointsApi","blockAction","blockData","setBlockSurePop","setBlockError","blockApi","populateBlockAction","populateBlockApi","unblockAction","unblockData","setLoadingUnblock","unblockApi"],"mappings":"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","sourcesContent":["import * as axs from './axs';\n\n// export const getUserDataAction = (id) => async (dispatch) => {\n//     try{\n\n//         const {data} = await axs.getUserDataApi(id); \n//         dispatch ({type: 'USER_DATA', data});\n   \n\n//     } catch(error) {\n//         console.log(error); \n//     }\n// }\n\nexport const getUsersAction = (type) => async (dispatch) => {\n    try{\n\n        const {data} = await axs.getUsersApi(type);\n\n        if (data.message === 'ChatHunt'){\n             dispatch ({type: 'GET_USERS', data});\n        }\n   \n\n    } catch(error) {\n        console.log(error); \n    }\n}\n\nexport const changeDpAction = (dp) => async (dispatch, navigate) => {\n    try{\n        const {data} = await axs.changeDpApi(dp); \n        dispatch ({type: 'CHANGE_DP', data});\n     \n        //navigate('/Portfolios');\n        window.location.reload(true);\n    } catch(error) {\n        console.log(error);\n    }\n}\n\nexport const editProfileAction = (profileFormData, setVisibleErrorProfile, setVisibleSuccessProfile, setLoadingProfile) => async (dispatch) => {\n    console.log(profileFormData);\n    try{\n        const {data} = await axs.editProfileApi(profileFormData);\n        console.log(data); \n        \n        if (data.message === 'UsernameTaken' \n            || data.message === 'error'){\n\n            dispatch ({type: 'EDIT_PROFILE', data});\n            setVisibleErrorProfile(true); \n            setLoadingProfile(false); \n\n        } else if (data.message === 'editedProfile'){\n\n            console.log(data.message);  \n            dispatch({type: 'EDIT_PROFILE', data});        \n            setVisibleSuccessProfile(true);\n            window.location.reload(true);\n\n        } \n     \n    } catch(error) {\n        console.log(error);\n    }\n}\nexport const editSecurityAction = (securityFormData, setVisibleErrorSecurity, setVisibleSuccessSecurity, setLoadingSecurity) => async (dispatch) => {\n    try{\n        const {data} = await axs.editSecurityApi(securityFormData); \n      //  dispatch ({type: 'EDIT_SECURITY', data});\n     \n        if (data.message === 'error'\n        || data.message === 'WrongPassword'\n        || data.message === 'EmailTaken'\n        || data.message === 'PasswordSame' \n        ){\n            dispatch ({type: 'EDIT_SECURITY', data});\n             setVisibleErrorSecurity(true); \n            setLoadingSecurity(false);  \n        } else if (data.message === 'PasswordEdited'\n        ||data.message === 'EmailPasswordEdited'\n        || data.message === 'EmailEdited'){\n            console.log(data.message);  \n            dispatch({type: 'EDIT_SECURITY', data});        \n            setVisibleSuccessSecurity(true);\n            //window.location.reload(true);\n        }\n    } catch(error) {\n        console.log(error);\n    }\n}\nexport const forgotPasswordAction = (forgotPassFormData, setVisibleError, setVisibleSuccess, setLoading) => async (dispatch) => {\n    try{\n        const {data} = await axs.forgotPasswordApi(forgotPassFormData); \n       \n     \n        if (data.message === 'error'\n        || data.message === 'NoEmail'\n        || data.message === 'PasswordSame' \n        ){\n            dispatch ({type: 'FORGOT_PASSWORD', data});\n             setVisibleError(true); \n            setLoading(false); \n\n        } else if (data.message === 'Success'){\n\n            console.log(data.message);  \n            dispatch({type: 'FORGOT_PASSWORD', data});        \n            setVisibleError(false);\n            setVisibleSuccess(true);\n\n        }\n    } catch(error) {\n        console.log(error);\n    }\n}\n\nexport const getMiniProfileAction = (profileName) => async (dispatch) => {\n\n        try{\n            const {data} = await axs.getMiniProfileApi(profileName); \n            dispatch ({type: 'GET_MINI_PROFILE', data});\n            console.log('miniprofile fetched');\n            \n        \n        } catch(error) { \n            console.log(error);\n        }\n          \n}\nexport const searchMiniProfileAction = (searchedName, setSearchingName, setSearchError) => async (dispatch) => {\n\n    try{\n        const {data} = await axs.getMiniProfileApi(searchedName);\n       \n        dispatch ({type: 'GET_MINI_PROFILE', data});\n        console.log('miniprofile fetched');\n\n        if(data === 'NO_USER'){\n            setSearchError(true);\n        } else if(data.userName?.length > 0){\n            setSearchError(false);\n        }\n        setSearchingName(false);\n        \n    \n    } catch(error) { \n        console.log(error);\n    }\n      \n}\nexport const followAction = (followData, setLoadingButtons, socket, setFollowSpam) => async (dispatch) => {\n\n    try{\n        const {data} = await axs.followApi(followData);\n        if(data==='Spam'){\n            setFollowSpam(true);\n            setTimeout( function() {setFollowSpam(false)}, 3000);\n            setLoadingButtons(false);\n        }else{\n            const miniProfile= data.miniProfile;\n            const miniProfileId = data.miniProfile._id;\n\n            dispatch ({type: 'FOLLOW', data:miniProfile}); \n\n            dispatch ({type: 'FOLLOW_REDUCER', data:miniProfileId}); //actual follow reducer\n            console.log('followed');\n            console.log(data); \n\n            setLoadingButtons(false);\n\n        // const socketNotificationData = data.newNotification;\n        //     socket.current.emit(\"sendNotification\", {\n        //         socketNotificationData        \n        //     });\n        }\n    \n    } catch(error) { \n        console.log(error);\n    }\n      \n}\nexport const quickFollowAction = (followData, setLoadingFollow) => async (dispatch) => {\n\n    try{\n        const {data} = await axs.followApi(followData);\n\n        if(data==='Spam'){\n          \n            return;\n\n        }else{\n            const miniProfile= data.miniProfile;\n            const miniProfileId = data.miniProfile._id;\n\n            dispatch ({type: 'FOLLOW_REDUCER', data:miniProfileId}); //actual follow reducer\n            console.log('follow Reducer');\n            console.log(data); \n\n            setLoadingFollow(false);\n\n        // const socketNotificationData = data.newNotification;\n        //     socket.current.emit(\"sendNotification\", {\n        //         socketNotificationData        \n        //     });\n        }\n    \n    } catch(error) { \n        console.log(error);\n    }\n      \n}\n\nexport const dailyPointsAction = (id) => async (dispatch, setpopDailyPoints) => {\n    try{\n        const {data} = await axs.dailyPointsApi(id); \n        dispatch ({type: 'DAILY_POINTS', data});\n        setpopDailyPoints(false);\n        window.location.reload(true);\n    } catch(error) {\n        console.log(error); \n    }\n}\nexport const blockAction = (blockData, setBlockSurePop, setBlockError,  setLoading, setLoadingButtons,) => async (dispatch) => {\n    try{\n        const {data} = await axs.blockApi(blockData); \n        console.log(data.message);\n        \n            dispatch ({type: 'BLOCK', data});\n            setBlockSurePop(false);\n            setBlockError(true);\n            setTimeout( function() {setBlockError(false)}, 2000);\n            setLoading(false);\n            if (data.message ==='error'){\n\n                setLoadingButtons(false);\n\n            }\n        //window.location.reload(true);\n    } catch(error) {\n        console.log(error);\n    }\n}\nexport const populateBlockAction = () => async (dispatch) => {\n    try{\n        const {data} = await axs.populateBlockApi(); \n        console.log(data);\n        \n            dispatch ({type: 'POPULATE_BLOCK', data});\n          \n    } catch(error) {\n        console.log(error);\n    }\n}\nexport const unblockAction = (unblockData, setLoadingUnblock, setBlockError) => async (dispatch) => {\n    try{\n        const {data} = await axs.unblockApi(unblockData);\n        dispatch ({type: 'UNBLOCK', data});\n        console.log(data.message);\n        setBlockError(true); \n        setTimeout( function() {setBlockError(false)}, 2000);\n\n        if(data.message==='error'){\n\n            setLoadingUnblock(false);\n\n        }\n        \n           \n          \n    } catch(error) {\n        console.log(error);\n    }\n}"]},"metadata":{},"sourceType":"module"}