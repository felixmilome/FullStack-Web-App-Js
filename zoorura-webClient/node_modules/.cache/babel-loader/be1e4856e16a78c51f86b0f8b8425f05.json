{"ast":null,"code":"import * as axs from './axs';\nexport const registerAction = (formData, navigate, setVisibleError, setLoading, setVisibleSuccess) => async dispatch => {\n  console.log(data.message);\n\n  try {\n    const {\n      data\n    } = await axs.registerApi(formData);\n\n    if (data.message === 'UsernameTaken') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else if (data.message === 'EmailTaken') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else if (data.message === 'UsernameEmailTaken') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else if (data.message === 'InputError') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      }); // navigate('/');\n\n      window.location.reload(true);\n      setVisibleSuccess(true);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const loginAction = (formData, navigate, setVisibleError, setLoading) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.loginApi(formData);\n    console.log(data.message);\n\n    if (data.message === 'LoginError') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      }); //navigate('/');\n\n      window.location.reload(true);\n      setVisibleError(true);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const verifyAction = (formData, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.verifyApi(formData);\n    dispatch({\n      type: 'GOOGLE_SIGNUP',\n      data\n    });\n    navigate('/');\n    window.location.reload(true);\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Midwares/rdx/actions/auth.js"],"names":["axs","registerAction","formData","navigate","setVisibleError","setLoading","setVisibleSuccess","dispatch","console","log","data","message","registerApi","type","window","location","reload","error","loginAction","loginApi","verifyAction","verifyApi"],"mappings":"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","sourcesContent":["import * as axs from './axs';\n\n\nexport const registerAction = (formData, navigate, setVisibleError,setLoading,setVisibleSuccess) => async (dispatch) => {\n   console.log(data.message);\n    try{\n        const {data} = await axs.registerApi(formData);\n        if (data.message === 'UsernameTaken'){\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n             setVisibleError(true); \n            setLoading(false);  \n        }else if (data.message === 'EmailTaken'){\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n             setVisibleError(true); \n            setLoading(false);  \n        }else if (data.message === 'UsernameEmailTaken'){\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n             setVisibleError(true); \n            setLoading(false);  \n        }else if (data.message === 'InputError'){\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n             setVisibleError(true); \n            setLoading(false);  \n        }else{  \n            dispatch({type: 'GOOGLE_SIGNUP', data});\n        // navigate('/');\n            window.location.reload(true);\n            setVisibleSuccess(true);\n        }\n    } catch (error){\n        console.log(error); \n    }\n}\n\n\n\n\n\nexport const loginAction = (formData, navigate, setVisibleError, setLoading) => async (dispatch) => {\n    try{\n        const {data} = await axs.loginApi(formData);\n        console.log(data.message);\n        if (data.message === 'LoginError'){\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n            setVisibleError(true); \n            setLoading(false);                 \n        } else {\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n            //navigate('/');\n             \n            window.location.reload(true);\n            setVisibleError(true); \n           \n        }\n\n    } catch (error){\n        console.log(error);\n    }\n} \n\nexport const verifyAction = (formData, navigate) => async (dispatch) => {\n    try{\n        const {data} = await axs.verifyApi(formData);\n        dispatch({type: 'GOOGLE_SIGNUP', data});\n        navigate('/');\n        window.location.reload(true);\n    } catch (error){\n        console.log(error);\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}