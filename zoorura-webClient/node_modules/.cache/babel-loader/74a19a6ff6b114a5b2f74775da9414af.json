{"ast":null,"code":"import * as axs from './axs';\nexport const changeDpAction = dp => async (dispatch, navigate) => {\n  try {\n    const {\n      data\n    } = await axs.changeDpApi(dp);\n    dispatch({\n      type: 'CHANGE_DP',\n      data\n    }); //navigate('/Portfolios');\n\n    window.location.reload(true);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const editProfileAction = (profileFormData, setVisibleErrorProfile, setVisibleSuccessProfile, setLoadingProfile) => async dispatch => {\n  console.log(profileFormData);\n\n  try {\n    const {\n      data\n    } = await axs.editProfileApi(profileFormData);\n    console.log(data);\n\n    if (data.message === 'UsernameTaken' || data.message === 'error') {\n      dispatch({\n        type: 'EDIT_PROFILE',\n        data\n      });\n      setVisibleErrorProfile(true);\n      setLoadingProfile(false);\n    } else if (data.message === 'editedProfile') {\n      console.log(data.message);\n      dispatch({\n        type: 'EDIT_PROFILE',\n        data\n      });\n      setVisibleSuccessProfile(true);\n      window.location.reload(true);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const editSecurityAction = (securityFormData, setVisibleErrorSecurity, setVisibleSuccessSecurity, setLoadingSecurity) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.editSecurityApi(securityFormData);\n    dispatch({\n      type: 'EDIT_SECURITY',\n      data\n    });\n\n    if (data.message === 'EmailTaken' || data.message === 'PasswordSame' || data.message === 'error') {\n      dispatch({\n        type: 'EDIT_SECURITY',\n        data\n      });\n      setVisibleErrorSecurity(true);\n      setLoadingSecurity(false);\n    } else if (data.message === 'PasswordEdited' || data.message === 'EmailPasswordEdited' || data.message === 'EmailEdited') {\n      console.log(data.message);\n      dispatch({\n        type: 'EDIT_SECURITY',\n        data\n      });\n      setVisibleSuccessSecurity(true);\n      window.location.reload(true);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getMiniProfileAction = profileName => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.getMiniProfileApi(profileName);\n    dispatch({\n      type: 'GET_MINI_PROFILE',\n      data\n    });\n    console.log('miniprofile fetched');\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const followAction = followData => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.followApi(followData);\n    dispatch({\n      type: 'FOLLOW',\n      data\n    });\n    console.log('followed');\n    console.log(data);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const dailyPointsAction = id => async (dispatch, setpopDailyPoints) => {\n  try {\n    const {\n      data\n    } = await axs.dailyPointsApi(id);\n    dispatch({\n      type: 'DAILY_POINTS',\n      data\n    });\n    setpopDailyPoints(false);\n    window.location.reload(true);\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Midwares/rdx/actions/profileAction.js"],"names":["axs","changeDpAction","dp","dispatch","navigate","data","changeDpApi","type","window","location","reload","error","console","log","editProfileAction","profileFormData","setVisibleErrorProfile","setVisibleSuccessProfile","setLoadingProfile","editProfileApi","message","editSecurityAction","securityFormData","setVisibleErrorSecurity","setVisibleSuccessSecurity","setLoadingSecurity","editSecurityApi","getMiniProfileAction","profileName","getMiniProfileApi","followAction","followData","followApi","dailyPointsAction","id","setpopDailyPoints","dailyPointsApi"],"mappings":"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","sourcesContent":["import * as axs from './axs';\n\nexport const changeDpAction = (dp) => async (dispatch, navigate) => {\n    try{\n        const {data} = await axs.changeDpApi(dp); \n        dispatch ({type: 'CHANGE_DP', data});\n     \n        //navigate('/Portfolios');\n        window.location.reload(true);\n    } catch(error) {\n        console.log(error);\n    }\n}\n\nexport const editProfileAction = (profileFormData, setVisibleErrorProfile, setVisibleSuccessProfile, setLoadingProfile) => async (dispatch) => {\n    console.log(profileFormData);\n    try{\n        const {data} = await axs.editProfileApi(profileFormData);\n        console.log(data); \n        \n        if (data.message === 'UsernameTaken' \n            || data.message === 'error'){\n\n            dispatch ({type: 'EDIT_PROFILE', data});\n            setVisibleErrorProfile(true); \n            setLoadingProfile(false); \n\n        } else if (data.message === 'editedProfile'){\n\n            console.log(data.message);  \n            dispatch({type: 'EDIT_PROFILE', data});        \n            setVisibleSuccessProfile(true);\n            window.location.reload(true);\n\n        } \n     \n    } catch(error) {\n        console.log(error);\n    }\n}\nexport const editSecurityAction = (securityFormData, setVisibleErrorSecurity, setVisibleSuccessSecurity, setLoadingSecurity) => async (dispatch) => {\n    try{\n        const {data} = await axs.editSecurityApi(securityFormData); \n        dispatch ({type: 'EDIT_SECURITY', data});\n     \n        if (data.message === 'EmailTaken'\n        || data.message === 'PasswordSame'\n        || data.message === 'error'){\n            dispatch ({type: 'EDIT_SECURITY', data});\n             setVisibleErrorSecurity(true); \n            setLoadingSecurity(false);  \n        } else if (data.message === 'PasswordEdited'\n        ||data.message === 'EmailPasswordEdited'\n        || data.message === 'EmailEdited'){\n            console.log(data.message);  \n            dispatch({type: 'EDIT_SECURITY', data});        \n            setVisibleSuccessSecurity(true);\n            window.location.reload(true);\n        }\n    } catch(error) {\n        console.log(error);\n    }\n}\n\nexport const getMiniProfileAction = (profileName) => async (dispatch) => {\n\n        try{\n            const {data} = await axs.getMiniProfileApi(profileName); \n            dispatch ({type: 'GET_MINI_PROFILE', data});\n            console.log('miniprofile fetched');\n            \n        \n        } catch(error) { \n            console.log(error);\n        }\n          \n}\nexport const followAction = (followData) => async (dispatch) => {\n\n    try{\n        const {data} = await axs.followApi(followData); \n        dispatch ({type: 'FOLLOW', data});\n        console.log('followed');\n        console.log(data);\n    \n    } catch(error) { \n        console.log(error);\n    }\n      \n}\n\nexport const dailyPointsAction = (id) => async (dispatch, setpopDailyPoints) => {\n    try{\n        const {data} = await axs.dailyPointsApi(id); \n        dispatch ({type: 'DAILY_POINTS', data});\n        setpopDailyPoints(false);\n        window.location.reload(true);\n    } catch(error) {\n        console.log(error);\n    }\n}"]},"metadata":{},"sourceType":"module"}