{"ast":null,"code":"import * as axs from './axs';\nexport const getMessagesAction = convoId => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.getMessagesApi(convoId);\n    console.log(data);\n    dispatch({\n      type: 'GET_ALL_MESSAGES',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n};\nexport const postMessagesAction = (messageData, socket, setLoading, setProgress) => async dispatch => {\n  console.log(\"Message Action Act\");\n\n  try {\n    console.log(messageData);\n    const {\n      data\n    } = await axs.postMessagesApi(messageData);\n    const socketMessageData = data.newMessage;\n    const socketNotificationData = data.newNotification;\n    dispatch({\n      type: 'POST_MESSAGE',\n      payload: socketMessageData\n    });\n    setLoading(false);\n    setProgress(0);\n    socket.current.emit(\"sendMessage\", {\n      socketMessageData\n    });\n    socket.current.emit(\"sendNotification\", {\n      socketNotificationData\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Midwares/rdx/actions/messagesAction.js"],"names":["axs","getMessagesAction","convoId","dispatch","data","getMessagesApi","console","log","type","payload","error","postMessagesAction","messageData","socket","setLoading","setProgress","postMessagesApi","socketMessageData","newMessage","socketNotificationData","newNotification","current","emit"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,OAArB;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,OAAD,IAAa,MAAOC,QAAP,IAAoB;AAC9D,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMJ,GAAG,CAACK,cAAJ,CAAmBH,OAAnB,CAArB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEAD,IAAAA,QAAQ,CAAE;AAACK,MAAAA,IAAI,EAAE,kBAAP;AAA2BC,MAAAA,OAAO,EAAEL;AAApC,KAAF,CAAR;AAIH,GARD,CAQE,OAAMM,KAAN,EAAa;AACXJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AAEA,WAAO,KAAP;AACH;AACJ,CAdM;AAiBP,OAAO,MAAMC,kBAAkB,GAAG,CAACC,WAAD,EAAcC,MAAd,EAAsBC,UAAtB,EAAkCC,WAAlC,KAAkD,MAAOZ,QAAP,IAAoB;AACpGG,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AACA,MAAG;AAECD,IAAAA,OAAO,CAACC,GAAR,CAAYK,WAAZ;AACA,UAAM;AAACR,MAAAA;AAAD,QAAS,MAAMJ,GAAG,CAACgB,eAAJ,CAAoBJ,WAApB,CAArB;AAGA,UAAMK,iBAAiB,GAAGb,IAAI,CAACc,UAA/B;AACA,UAAMC,sBAAsB,GAAGf,IAAI,CAACgB,eAApC;AAIAjB,IAAAA,QAAQ,CAAE;AAACK,MAAAA,IAAI,EAAE,cAAP;AAAuBC,MAAAA,OAAO,EAAEQ;AAAhC,KAAF,CAAR;AACAH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAC,IAAAA,WAAW,CAAC,CAAD,CAAX;AAGAF,IAAAA,MAAM,CAACQ,OAAP,CAAeC,IAAf,CAAoB,aAApB,EAAmC;AAC/BL,MAAAA;AAD+B,KAAnC;AAGCJ,IAAAA,MAAM,CAACQ,OAAP,CAAeC,IAAf,CAAoB,kBAApB,EAAwC;AACpCH,MAAAA;AADoC,KAAxC;AAKJ,GAxBD,CAwBE,OAAMT,KAAN,EAAa;AACXJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH;AACJ,CA7BM","sourcesContent":["import * as axs from './axs';\n\nexport const getMessagesAction = (convoId) => async (dispatch) => {\n    try{\n        const {data} = await axs.getMessagesApi(convoId);\n        console.log(data);\n\n        dispatch ({type: 'GET_ALL_MESSAGES', payload: data});\n\n        \n\n    } catch(error) {\n        console.log(error);\n\n        return false;\n    }\n}\n \n\nexport const postMessagesAction = (messageData, socket, setLoading, setProgress) => async (dispatch) => {\n    console.log(\"Message Action Act\");\n    try{\n\n        console.log(messageData);\n        const {data} = await axs.postMessagesApi(messageData);\n       \n\n        const socketMessageData = data.newMessage;\n        const socketNotificationData = data.newNotification; \n\n        \n    \n        dispatch ({type: 'POST_MESSAGE', payload: socketMessageData});\n        setLoading(false);\n        setProgress(0); \n        \n\n        socket.current.emit(\"sendMessage\", {\n            socketMessageData\n         });\n         socket.current.emit(\"sendNotification\", {\n             socketNotificationData        \n         });\n         \n\n    } catch(error) {  \n        console.log(error);\n    }\n}"]},"metadata":{},"sourceType":"module"}