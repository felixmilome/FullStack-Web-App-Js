{"ast":null,"code":"// NOT NECESSARY, ITS GETTING ALL CONVOS ON EVERY REFRESH\n// export const convosOpenedReducer = (convosOpenCheck = false, action) => {\n//     switch(action.type){ //getfalse or array not needed since convo rightbar is only one\n//         case 'CONVO_OPENED':\n//             return true\n//         default:\n//             return convosOpenCheck; \n//     }\n// } \nexport const messagesOpenedReducer = (messagesOpenCheck = [], action) => {\n  // use if not equal to true or let convoRow send false \n  switch (action.type) {\n    case 'MESSAGES_OPENED':\n      return [...messagesOpenCheck, action.payload];\n\n    default:\n      return messagesOpenCheck;\n  }\n};\nexport const reviewsOpenedReducer = (reviewsOpenCheck = [], action) => {\n  // use if not equal to true or let diary send false \n  switch (action.type) {\n    case 'REVIEWS_OPENED':\n      return [...reviewsOpenCheck, action.payload];\n\n    default:\n      return reviewsOpenCheck;\n  }\n};\nexport const tipDiaryOpenedReducer = (diaryTipsOpenCheck = [], action) => {\n  // use if not equal to true or let diary s\n  switch (action.type) {\n    case 'DIARYTIPS_OPENED':\n      return [...diaryTipsOpenCheck, action.payload];\n\n    default:\n      return diaryTipsOpenCheck;\n  }\n};\nexport const tipReviewOpenedReducer = (reviewTipsOpenCheck = [], action) => {\n  // use if not equal to true or let diary s\n  switch (action.type) {\n    case 'REVIEWTIPS_OPENED':\n      return [...reviewTipsOpenCheck, action.payload];\n\n    default:\n      return reviewTipsOpenCheck;\n  }\n};","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Midwares/rdx/reducers/openedCheckReducer.js"],"names":["messagesOpenedReducer","messagesOpenCheck","action","type","payload","reviewsOpenedReducer","reviewsOpenCheck","tipDiaryOpenedReducer","diaryTipsOpenCheck","tipReviewOpenedReducer","reviewTipsOpenCheck"],"mappings":"AACC;AACD;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,qBAAqB,GAAG,CAACC,iBAAiB,GAAG,EAArB,EAAyBC,MAAzB,KAAoC;AAAE;AACvE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,iBAAL;AACI,aAAO,CAAC,GAAGF,iBAAJ,EAAuBC,MAAM,CAACE,OAA9B,CAAP;;AACJ;AACI,aAAOH,iBAAP;AAJR;AAMH,CAPM;AAQP,OAAO,MAAMI,oBAAoB,GAAG,CAACC,gBAAgB,GAAG,EAApB,EAAwBJ,MAAxB,KAAmC;AAAE;AACrE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,gBAAL;AACI,aAAO,CAAC,GAAGG,gBAAJ,EAAsBJ,MAAM,CAACE,OAA7B,CAAP;;AACJ;AACI,aAAOE,gBAAP;AAJR;AAMH,CAPM;AAQP,OAAO,MAAMC,qBAAqB,GAAG,CAACC,kBAAkB,GAAG,EAAtB,EAA0BN,MAA1B,KAAqC;AAAE;AACxE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,kBAAL;AACI,aAAO,CAAC,GAAGK,kBAAJ,EAAwBN,MAAM,CAACE,OAA/B,CAAP;;AACJ;AACI,aAAOI,kBAAP;AAJR;AAMH,CAPM;AAQP,OAAO,MAAMC,sBAAsB,GAAG,CAACC,mBAAmB,GAAG,EAAvB,EAA2BR,MAA3B,KAAsC;AAAE;AAC1E,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,mBAAL;AACI,aAAO,CAAC,GAAGO,mBAAJ,EAAyBR,MAAM,CAACE,OAAhC,CAAP;;AACJ;AACI,aAAOM,mBAAP;AAJR;AAMH,CAPM","sourcesContent":["\n // NOT NECESSARY, ITS GETTING ALL CONVOS ON EVERY REFRESH\n// export const convosOpenedReducer = (convosOpenCheck = false, action) => {\n//     switch(action.type){ //getfalse or array not needed since convo rightbar is only one\n                       \n        \n//         case 'CONVO_OPENED':\n//             return true\n//         default:\n//             return convosOpenCheck; \n//     }\n// } \nexport const messagesOpenedReducer = (messagesOpenCheck = [], action) => { // use if not equal to true or let convoRow send false \n    switch(action.type){\n        case 'MESSAGES_OPENED':\n            return [...messagesOpenCheck, action.payload];\n        default: \n            return messagesOpenCheck;\n    }\n}\nexport const reviewsOpenedReducer = (reviewsOpenCheck = [], action) => { // use if not equal to true or let diary send false \n    switch(action.type){\n        case 'REVIEWS_OPENED':\n            return [...reviewsOpenCheck, action.payload];\n        default:\n            return reviewsOpenCheck;\n    }\n}\nexport const tipDiaryOpenedReducer = (diaryTipsOpenCheck = [], action) => { // use if not equal to true or let diary s\n    switch(action.type){\n        case 'DIARYTIPS_OPENED':\n            return [...diaryTipsOpenCheck, action.payload];\n        default:\n            return diaryTipsOpenCheck;\n    }\n}\nexport const tipReviewOpenedReducer = (reviewTipsOpenCheck = [], action) => { // use if not equal to true or let diary s\n    switch(action.type){\n        case 'REVIEWTIPS_OPENED':\n            return [...reviewTipsOpenCheck, action.payload];\n        default:\n            return reviewTipsOpenCheck;\n    }\n}"]},"metadata":{},"sourceType":"module"}