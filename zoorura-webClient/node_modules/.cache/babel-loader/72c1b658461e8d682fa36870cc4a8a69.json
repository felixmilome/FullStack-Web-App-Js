{"ast":null,"code":"import * as axs from './axs';\nexport const getDiariesAction = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.getDiariesApi();\n    dispatch({\n      type: 'GET_ALL_DIARIES',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const postDiariesAction = (diary, setpopPosted, navigate, setDisplayer) => async dispatch => {\n  try {\n    if (diary.type === 'diary') {\n      const {\n        data\n      } = await axs.postDiariesApi(diary);\n      setpopPosted(true);\n      dispatch({\n        type: 'POST_DIARY',\n        payload: data\n      });\n      navigate('/');\n      window.location.reload(true);\n    } else if (diary.type === 'display') {\n      const {\n        data\n      } = await axs.postDiariesApi(diary);\n      setpopPosted(true);\n      const newDisplay = data.newDisplay;\n      const displayedDiary = data.displayedDiary;\n      dispatch({\n        type: 'POST_DIARY',\n        payload: newDisplay\n      });\n      dispatch({\n        type: 'POST_DISPLAY',\n        payload: newDisplay\n      });\n      setDisplayer(true);\n      setTimeout(function () {\n        setDisplayer(false);\n      }, 2000);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const patchDiariesAction = (id, diariesEditData) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.patchDiariesApi(id, diariesEditData);\n    dispatch({\n      type: 'PATCH_DIARY',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error); // console.log(diariesEditData);\n    // console.log(id);\n  }\n};\nexport const deleteDiariesAction = id => async dispatch => {\n  try {\n    await axs.deleteDiariesApi(id);\n    dispatch({\n      type: 'DELETE_DIARY',\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const tipDiariesAction = (id, tipperData, setpopSure, setpopTip) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.tipDiariesApi(id, tipperData);\n    dispatch({\n      type: 'TIP_DIARY',\n      payload: data\n    }); // if(dispatch)\n    // {\n\n    setpopSure(false);\n    setpopTip(false); //}\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const reviewDiariesAction = (id, reviewData, setreviewData) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.reviewDiariesApi(id, reviewData);\n    dispatch({\n      type: 'REVIEW_DIARY',\n      payload: data\n    });\n    setreviewData({\n      reviewer: '',\n      reviewerId: '',\n      body: ''\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Midwares/rdx/actions/diariesAction.js"],"names":["axs","getDiariesAction","dispatch","data","getDiariesApi","type","payload","error","console","log","postDiariesAction","diary","setpopPosted","navigate","setDisplayer","postDiariesApi","window","location","reload","newDisplay","displayedDiary","setTimeout","patchDiariesAction","id","diariesEditData","patchDiariesApi","deleteDiariesAction","deleteDiariesApi","tipDiariesAction","tipperData","setpopSure","setpopTip","tipDiariesApi","reviewDiariesAction","reviewData","setreviewData","reviewDiariesApi","reviewer","reviewerId","body"],"mappings":"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","sourcesContent":["import * as axs from './axs';\n\n \nexport const getDiariesAction = () => async (dispatch) => {\n    try{\n        const {data} = await axs.getDiariesApi();\n\n        dispatch ({type: 'GET_ALL_DIARIES', payload: data});\n    } catch(error) {\n        console.log(error); \n    }\n}\nexport const postDiariesAction = (diary, setpopPosted, navigate, setDisplayer) => async (dispatch) => {\n    try{\n        \n       \n\n        if(diary.type === 'diary'){\n\n            const {data} = await axs.postDiariesApi(diary);\n            setpopPosted(true);\n\n            dispatch ({type: 'POST_DIARY', payload: data});            \n            navigate ('/');\n            window.location.reload(true); \n\n        }else if(diary.type === 'display'){\n\n            const {data} = await axs.postDiariesApi(diary);\n            setpopPosted(true);\n\n            const newDisplay = data.newDisplay;\n            const displayedDiary = data.displayedDiary;\n\n            dispatch ({type: 'POST_DIARY', payload: newDisplay});\n            dispatch ({type: 'POST_DISPLAY', payload: newDisplay});\n            setDisplayer(true);\n            setTimeout( function() {setDisplayer (false)}, 2000);\n      \n        }\n\n        \n    } catch(error) {\n        console.log(error);\n    }\n}\nexport const patchDiariesAction = (id, diariesEditData) => async (dispatch)=>{\n    try{\n        const {data} = await axs.patchDiariesApi(id, diariesEditData); \n        dispatch ({type: 'PATCH_DIARY', payload: data});\n    } catch(error){\n        console.log(error);\n        // console.log(diariesEditData);\n        // console.log(id);\n    }\n}\n\nexport const deleteDiariesAction = (id) => async (dispatch) =>{\n        try{\n            await axs.deleteDiariesApi(id);\n            dispatch({type: 'DELETE_DIARY', payload: id});\n\n        } catch(error){\n            console.log(error);\n        }\n}\n\nexport const tipDiariesAction = (id, tipperData, setpopSure, setpopTip) => async (dispatch)=>{\n    try{\n        const {data} = await axs.tipDiariesApi(id, tipperData);  \n       \n        dispatch ({type: 'TIP_DIARY', payload: data});\n        // if(dispatch)\n        // {\n        setpopSure(false);\n        setpopTip(false);\n        //}\n        \n    } catch(error){\n        console.log(error);\n     \n    }\n}\nexport const reviewDiariesAction = (id, reviewData, setreviewData) => async (dispatch)=>{\n    try{\n        const {data} = await axs.reviewDiariesApi(id, reviewData); \n        \n        dispatch ({type: 'REVIEW_DIARY', payload: data});\n\n        setreviewData({reviewer:'', reviewerId:'', body: ''});\n    } catch(error){\n        console.log(error);\n       \n    }\n}\n"]},"metadata":{},"sourceType":"module"}