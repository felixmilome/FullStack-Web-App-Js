{"ast":null,"code":"import * as axs from './axs';\nexport const getDiariesAction = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.getDiariesApi();\n    dispatch({\n      type: 'GET_ALL_DIARIES',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const postDiariesAction = (diary, setpopPosted, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.postDiariesApi(diary);\n    dispatch({\n      type: 'POST_DIARY',\n      payload: data\n    });\n    setpopPosted(true);\n    navigate('/'); //setTimeout( function() {navigate ('/')}, 1000);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const patchDiariesAction = (id, diariesEditData) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.patchDiariesApi(id, diariesEditData);\n    dispatch({\n      type: 'PATCH_DIARY',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error); // console.log(diariesEditData);\n    // console.log(id);\n  }\n};\nexport const deleteDiariesAction = id => async dispatch => {\n  try {\n    await axs.deleteDiariesApi(id);\n    dispatch({\n      type: 'DELETE_DIARY',\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const tipDiariesAction = (id, tipperData) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.tipDiariesApi(id, tipperData);\n    dispatch({\n      type: 'TIP_DIARY',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const reviewDiariesAction = (id, reviewData, setreviewData) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.reviewDiariesApi(id, reviewData);\n    dispatch({\n      type: 'REVIEW_DIARY',\n      payload: data\n    });\n    setreviewData({\n      reviewer: '',\n      reviewerId: '',\n      body: ''\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-web/src/components/Midwares/rdx/actions/diariesAction.js"],"names":["axs","getDiariesAction","dispatch","data","getDiariesApi","type","payload","error","console","log","postDiariesAction","diary","setpopPosted","navigate","postDiariesApi","patchDiariesAction","id","diariesEditData","patchDiariesApi","deleteDiariesAction","deleteDiariesApi","tipDiariesAction","tipperData","tipDiariesApi","reviewDiariesAction","reviewData","setreviewData","reviewDiariesApi","reviewer","reviewerId","body"],"mappings":"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","sourcesContent":["import * as axs from './axs';\n\nexport const getDiariesAction = () => async (dispatch) => {\n    try{\n        const {data} = await axs.getDiariesApi();\n\n        dispatch ({type: 'GET_ALL_DIARIES', payload: data});\n    } catch(error) {\n        console.log(error);\n    }\n}\nexport const postDiariesAction = (diary, setpopPosted, navigate) => async (dispatch) => {\n    try{\n        const {data} = await axs.postDiariesApi(diary);\n\n        dispatch ({type: 'POST_DIARY', payload: data});\n\n        setpopPosted(true);\n        navigate ('/');\n\n        //setTimeout( function() {navigate ('/')}, 1000);\n    } catch(error) {\n        console.log(error);\n    }\n}\nexport const patchDiariesAction = (id, diariesEditData) => async (dispatch)=>{\n    try{\n        const {data} = await axs.patchDiariesApi(id, diariesEditData); \n        dispatch ({type: 'PATCH_DIARY', payload: data});\n    } catch(error){\n        console.log(error);\n        // console.log(diariesEditData);\n        // console.log(id);\n    }\n}\n\nexport const deleteDiariesAction = (id) => async (dispatch) =>{\n        try{\n            await axs.deleteDiariesApi(id);\n            dispatch({type: 'DELETE_DIARY', payload: id});\n\n        } catch(error){\n            console.log(error);\n        }\n}\n\nexport const tipDiariesAction = (id, tipperData) => async (dispatch)=>{\n    try{\n        const {data} = await axs.tipDiariesApi(id, tipperData); \n       \n        dispatch ({type: 'TIP_DIARY', payload: data});\n    } catch(error){\n        console.log(error);\n     \n    }\n}\nexport const reviewDiariesAction = (id, reviewData, setreviewData) => async (dispatch)=>{\n    try{\n        const {data} = await axs.reviewDiariesApi(id, reviewData); \n        \n        dispatch ({type: 'REVIEW_DIARY', payload: data});\n\n        setreviewData({reviewer:'', reviewerId:'', body: ''});\n    } catch(error){\n        console.log(error);\n       \n    }\n}\n"]},"metadata":{},"sourceType":"module"}