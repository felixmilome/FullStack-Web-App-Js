{"ast":null,"code":"var _jsxFileName = \"/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Modals/NotificationsmodalRow.jsx\",\n    _s = $RefreshSig$();\n\nimport moment from 'moment';\nimport { readNotificationsAction } from '../Midwares/rdx/actions/notificationsAction.js';\nimport { postTipsAction } from '../Midwares/rdx/actions/tipsAction.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { SurePop } from '../Body/SurePop';\nimport { DeliveryPop } from '../Modals/DeliveryPop';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction NotificationsmodalRow({\n  notification\n}) {\n  _s();\n\n  var _notification$sender, _notification$sender$, _notification$sender2, _notification$sender3;\n\n  const [unread, setUnread] = useState(false);\n  const [tipDelivery, setTipDelivery] = useState(false);\n  const [popTip, setPopTip] = useState(false); //this does nothing. Just coz TipAction demands\n\n  const [tipLoading, setTipLoading] = useState(false);\n  const [popSure, setPopSure] = useState(false);\n  const [tipData, setTipData] = useState({\n    receiverId: '',\n    tippedPostId: '',\n    type: '',\n    amount: null\n  });\n  const socket = useSelector(state => state.socketReducer);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (notification.read === false) {\n      setUnread(true); //Mark BLUE and keep despite object edited to read.\n\n      console.log(notification.read);\n      dispatch(readNotificationsAction(notification._id));\n    }\n  }, [notification]);\n\n  const prepareTip = (tipAmount, type) => {\n    setTipData({\n      receiverId: notification.sender._id,\n      tippedPostId: notification._id,\n      type: type,\n      amount: tipAmount\n    });\n    setPopSure(true);\n    console.log(tipData);\n  };\n\n  const tipDisplayNotification = () => {\n    setTipLoading(true);\n    dispatch(postTipsAction(tipData, setPopSure, setPopTip, setTipLoading, setTipDelivery, socket));\n  };\n\n  const setTipFalse = () => {\n    setPopSure(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [popSure && /*#__PURE__*/_jsxDEV(SurePop, {\n      action: 'Tip',\n      token: tipData.amount,\n      message: `to ${notification.sender.userName} for endorsing your post`,\n      loadingFunction: tipLoading,\n      loadingMessage: 'Verifying Tip',\n      yesFunction: tipDisplayNotification,\n      noFunction: setTipFalse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), tipDelivery && /*#__PURE__*/_jsxDEV(DeliveryPop, {\n      message: \"Tip Sent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        wordBreak: 'break-word'\n      },\n      className: `items-center my-1 text-gray-500 hover:bg-white ${unread === true && 'border-l-2 border-cyan-400'} rounded-md shadow-md cursor-pointer group p-3`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex text-xs  items-center space-x-2 mt-2 \",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: notification.sender.dpUrl,\n          alt: \"dp\",\n          className: \"inline-flex w-10 h-10 bg-white group-hover:bg-gray-600 cursor-pointer object-cover rounded-full \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-x-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"inline-flex \",\n            children: [\"@\", notification.sender.userName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \" font-bold\",\n            children: [notification.type === 'review' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-semibold \",\n                children: \"reviewed your post titled:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-light text-left\",\n                children: [\"\\\"\", notification.body, \"\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true), notification.type === 'reviewReply' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-semibold \",\n                children: \"replied to your review on the post titled:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-light text-left\",\n                children: [\"\\\"\", notification.body, \"\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true), notification.type === 'display' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" endorsed your post titled \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-light text-left\",\n                  children: [\"\\\"\", notification.body, \"\\\"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 64\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" to \", (_notification$sender = notification.sender) === null || _notification$sender === void 0 ? void 0 : (_notification$sender$ = _notification$sender.followers) === null || _notification$sender$ === void 0 ? void 0 : _notification$sender$.length, ((_notification$sender2 = notification.sender) === null || _notification$sender2 === void 0 ? void 0 : (_notification$sender3 = _notification$sender2.followers) === null || _notification$sender3 === void 0 ? void 0 : _notification$sender3.length) === 1 ? ' person' : ' people']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this), notification.tipped === false && /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => prepareTip(notification.tipAmount, 'displayNotificationTip'),\n                className: \"p-2 bg-teal-400 text-white hover:bg-teal-500 cursor-pointer rounded w-max my-1 flex justify-center\",\n                children: [\"Thank with \", notification.tipAmount, notification.tipAmount === 1 ? ' tip' : ' tips']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 36\n              }, this), notification.tipped === true && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-2 bg-gray-400 text-white rounded w-max my-1 flex justify-center\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Already Tipped\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true), notification.type === 'freeConvo' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"is requesting a Free Convo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-light text-left\",\n                children: [\"\\\"\", notification.body, \"\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"py-1 flex items-center space-x-3 font-semibold text-white\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2 bg-teal-400 hover:bg-teal-600 cursor-pointer rounded w-full flex justify-center\",\n                  children: \"Approve\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true), notification.type === 'follow' && 'subscribed to you']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-light text-gray-500\",\n            children: moment(notification.createdOn).fromNow()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NotificationsmodalRow, \"3PEiaSyOoo+dZ+bJrGuy0uh5AnU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = NotificationsmodalRow;\nexport default NotificationsmodalRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationsmodalRow\");","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Modals/NotificationsmodalRow.jsx"],"names":["moment","readNotificationsAction","postTipsAction","useSelector","useDispatch","useEffect","useState","SurePop","DeliveryPop","NotificationsmodalRow","notification","unread","setUnread","tipDelivery","setTipDelivery","popTip","setPopTip","tipLoading","setTipLoading","popSure","setPopSure","tipData","setTipData","receiverId","tippedPostId","type","amount","socket","state","socketReducer","dispatch","read","console","log","_id","prepareTip","tipAmount","sender","tipDisplayNotification","setTipFalse","userName","wordBreak","dpUrl","body","followers","length","tipped","createdOn","fromNow"],"mappings":"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","sourcesContent":["import moment from 'moment'; \nimport {readNotificationsAction} from '../Midwares/rdx/actions/notificationsAction.js';\nimport { postTipsAction } from '../Midwares/rdx/actions/tipsAction.js';\nimport{useSelector, useDispatch} from 'react-redux';\nimport {useEffect, useState} from 'react';\nimport {SurePop} from '../Body/SurePop';\nimport{DeliveryPop} from '../Modals/DeliveryPop';\n\n\n\nfunction NotificationsmodalRow ({notification}) {  \n\n    const [unread, setUnread] = useState(false);\n    const [tipDelivery, setTipDelivery] = useState(false);\n    const [popTip, setPopTip] = useState(false); //this does nothing. Just coz TipAction demands\n    const [tipLoading, setTipLoading] = useState(false);\n    const [popSure, setPopSure] = useState(false);\n    const [tipData, setTipData] = useState({receiverId:'', tippedPostId:'', type:'', amount: null});\n    \n    const socket = useSelector((state) => state.socketReducer);\n    \n \n        const dispatch = useDispatch();  \n\n        useEffect(() => { \n            if(notification.read === false){\n                setUnread(true); //Mark BLUE and keep despite object edited to read.\n                console.log(notification.read);  \n                dispatch(readNotificationsAction(notification._id));             \n            } \n        }, [notification]);\n\n        const prepareTip = (tipAmount, type) => {\n\n            setTipData ({receiverId:notification.sender._id, tippedPostId:notification._id, type:type, amount: tipAmount});\n            setPopSure(true);\n            console.log(tipData); \n    \n        }\n        \n        \n        const tipDisplayNotification = ()=> {\n            setTipLoading(true);\n            dispatch(postTipsAction(tipData, setPopSure, setPopTip, setTipLoading, setTipDelivery, socket)); \n        }\n        const setTipFalse = ()=> {\n            setPopSure(false);\n        }\n    \n    return (\n        <>\n\n          { popSure &&\n            <SurePop action={'Tip'} token={tipData.amount} message={`to ${notification.sender.userName} for endorsing your post`} loadingFunction={tipLoading} loadingMessage ={'Verifying Tip'} yesFunction= {tipDisplayNotification} noFunction = {setTipFalse} /> \n           }\n            {tipDelivery &&\n                <DeliveryPop message='Tip Sent'/>\n            }\n           \n        <div style={{wordBreak: 'break-word'}} className= {`items-center my-1 text-gray-500 hover:bg-white ${unread === true && 'border-l-2 border-cyan-400'} rounded-md shadow-md cursor-pointer group p-3`}>\n             \n            <div className=\"flex text-xs  items-center space-x-2 mt-2 \">\n                <img src= {notification.sender.dpUrl} alt=\"dp\" className= \"inline-flex w-10 h-10 bg-white group-hover:bg-gray-600 cursor-pointer object-cover rounded-full \"/>\n                <div className=\"space-x-1\">\n                    {/* <p className= \"inline-flex font-bold\">\n                    {title}</p> */}\n                    <p className= \"inline-flex \">\n                    @{notification.sender.userName}</p> \n\n                \n    \n                    <p className= \" font-bold\">\n\n                        {notification.type ==='review' &&  \n                            <>\n                                <p className= \"font-semibold \">reviewed your post titled:</p>\n                                <p className= \"font-light text-left\">\"{notification.body}\"</p>\n                            </>\n                        }\n                        {notification.type ==='reviewReply' && \n                            <>\n                                <p className= \"font-semibold \">replied to your review on the post titled:</p>\n                                <p className= \"font-light text-left\">\"{notification.body}\"</p>\n                            </>\n                        }\n                        {notification.type ==='display' &&  \n                            <>\n                                <p > endorsed your post titled <span className= \"font-light text-left\">\"{notification.body}\"</span></p>\n                                \n                                <p > to {notification.sender?.followers?.length}\n                                 {notification.sender?.followers?.length === 1 ? ' person': ' people'}\n                                 </p>\n                                {notification.tipped ===false \n                                && <div onClick= {()=>prepareTip(notification.tipAmount, 'displayNotificationTip')} className='p-2 bg-teal-400 text-white hover:bg-teal-500 cursor-pointer rounded w-max my-1 flex justify-center'>\n                                      Thank with {notification.tipAmount}\n                                      {notification.tipAmount === 1 ? ' tip': ' tips'}\n                                    </div>}\n\n                                {notification.tipped ===true\n                                 && <div className='p-2 bg-gray-400 text-white rounded w-max my-1 flex justify-center'>\n                                     <p>Already Tipped</p>\n                                </div>}\n                            </>\n                        }\n                        {notification.type ==='freeConvo' && \n                            <>\n                                <p >is requesting a Free Convo</p>\n                                <p className= \"font-light text-left\">\"{notification.body}\"</p>\n                                <div className= 'py-1 flex items-center space-x-3 font-semibold text-white'>\n                                    <div className='p-2 bg-teal-400 hover:bg-teal-600 cursor-pointer rounded w-full flex justify-center'>\n                                        Approve\n                                    </div>\n                                {/* <div className='p-2 bg-red-400 hover:bg-red-600 cursor-pointer rounded  w-12 flex justify-center'>\n                                        No\n                                    </div> */}\n                                </div>\n                            </>\n                        }\n                        \n                        {notification.type ==='follow' && 'subscribed to you'}\n                    \n                    \n                    </p>\n            \n                    <p className= \"font-light text-gray-500\"> \n                        {moment (notification.createdOn).fromNow()}\n                    </p>\n                </div>\n            </div>\n        </div>\n       \n        </>\n        \n       \n    )\n}\n\nexport default NotificationsmodalRow; \n"]},"metadata":{},"sourceType":"module"}