{"ast":null,"code":"import * as axs from './axs';\nexport const saveDiariesAction = (savedDiaryData, setPopSaved) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.saveDiariesApi(savedDiaryData);\n    console.log(data);\n    dispatch({\n      type: 'SAVE_DIARY',\n      payload: data\n    });\n    setPopSaved(true);\n    setTimeout(function () {\n      setPopSaved(false);\n    }, 2000);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteSavedDiariesAction = (savedId, setPopDeleted, setLoading, setPopError) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.deleteSavedDiariesApi(savedId);\n    console.log(data);\n\n    if (data.message = 'Deleted') {\n      dispatch({\n        type: 'DELETE_SAVED_DIARY',\n        payload: savedId\n      });\n      setLoading(false);\n      setPopDeleted(true);\n      setTimeout(function () {\n        setPopDeleted(false);\n      }, 2000);\n    } else {\n      setPopError(true);\n      setTimeout(function () {\n        setPopError(false);\n      }, 2000);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getSavedDiariesAction = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.getSavedDiariesApi();\n    dispatch({\n      type: 'GET_SAVED_DIARY',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Midwares/rdx/actions/savedDiariesAction.js"],"names":["axs","saveDiariesAction","savedDiaryData","setPopSaved","dispatch","data","saveDiariesApi","console","log","type","payload","setTimeout","error","deleteSavedDiariesAction","savedId","setPopDeleted","setLoading","setPopError","deleteSavedDiariesApi","message","getSavedDiariesAction","getSavedDiariesApi"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,OAArB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,cAAD,EAAiBC,WAAjB,KAAiC,MAAOC,QAAP,IAAmB;AAC7E,MAAG;AACC,UAAK;AAACC,MAAAA;AAAD,QAAQ,MAAML,GAAG,CAACM,cAAJ,CAAmBJ,cAAnB,CAAnB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAD,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAE,YAAP;AAAqBC,MAAAA,OAAO,EAAEL;AAA9B,KAAD,CAAR;AACAF,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAQ,IAAAA,UAAU,CAAE,YAAW;AAACR,MAAAA,WAAW,CAAE,KAAF,CAAX;AAAoB,KAAlC,EAAoC,IAApC,CAAV;AAEH,GAPD,CAOE,OAAMS,KAAN,EAAY;AACVL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH;AACR,CAXM;AAYP,OAAO,MAAMC,wBAAwB,GAAG,CAACC,OAAD,EAAUC,aAAV,EAAyBC,UAAzB,EAAqCC,WAArC,KAAqD,MAAOb,QAAP,IAAmB;AACxG,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAML,GAAG,CAACkB,qBAAJ,CAA0BJ,OAA1B,CAArB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACA,QAAIA,IAAI,CAACc,OAAL,GAAc,SAAlB,EAA4B;AACxBf,MAAAA,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAE,oBAAP;AAA6BC,QAAAA,OAAO,EAAEI;AAAtC,OAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAJ,MAAAA,UAAU,CAAE,YAAW;AAACI,QAAAA,aAAa,CAAE,KAAF,CAAb;AAAsB,OAApC,EAAsC,IAAtC,CAAV;AACH,KALD,MAKM;AACAE,MAAAA,WAAW,CAAC,IAAD,CAAX;AACFN,MAAAA,UAAU,CAAE,YAAW;AAACM,QAAAA,WAAW,CAAE,KAAF,CAAX;AAAoB,OAAlC,EAAoC,IAApC,CAAV;AACH;AAEJ,GAbD,CAaE,OAAML,KAAN,EAAY;AACVL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH;AACR,CAjBM;AAkBP,OAAO,MAAMQ,qBAAqB,GAAG,MAAM,MAAOhB,QAAP,IAAmB;AACtD,MAAG;AACA,UAAM;AAACC,MAAAA;AAAD,QAAQ,MAAML,GAAG,CAACqB,kBAAJ,EAApB;AACCjB,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAE,iBAAP;AAA0BC,MAAAA,OAAO,EAAEL;AAAnC,KAAD,CAAR;AAEH,GAJD,CAIE,OAAMO,KAAN,EAAY;AACVL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH;AACR,CARM","sourcesContent":["import * as axs from './axs';\n\nexport const saveDiariesAction = (savedDiaryData, setPopSaved) => async (dispatch) =>{\n        try{\n            const{data}= await axs.saveDiariesApi(savedDiaryData);\n            console.log(data);\n            dispatch({type: 'SAVE_DIARY', payload: data});\n            setPopSaved(true);\n            setTimeout( function() {setPopSaved (false)}, 2000);  \n\n        } catch(error){\n            console.log(error);\n        }\n}\nexport const deleteSavedDiariesAction = (savedId, setPopDeleted, setLoading, setPopError) => async (dispatch) =>{\n        try{\n            const {data} = await axs.deleteSavedDiariesApi(savedId);\n            console.log(data);\n            if (data.message= 'Deleted'){\n                dispatch({type: 'DELETE_SAVED_DIARY', payload: savedId});\n                setLoading(false);\n                setPopDeleted(true); \n                setTimeout( function() {setPopDeleted (false)}, 2000);\n            }else {\n                  setPopError(true); \n                setTimeout( function() {setPopError (false)}, 2000);\n            } \n\n        } catch(error){\n            console.log(error);\n        }\n}\nexport const getSavedDiariesAction = () => async (dispatch) =>{\n        try{\n           const {data}= await axs.getSavedDiariesApi();\n            dispatch({type: 'GET_SAVED_DIARY', payload: data});\n\n        } catch(error){\n            console.log(error);\n        }\n}"]},"metadata":{},"sourceType":"module"}