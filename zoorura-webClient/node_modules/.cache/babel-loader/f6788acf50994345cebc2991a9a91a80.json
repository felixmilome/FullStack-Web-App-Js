{"ast":null,"code":"import * as axs from './axs';\nexport const getTipsAction = postId => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.getTipsApi(postId);\n    console.log(data);\n    dispatch({\n      type: 'GET_POST_TIPS',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n};\nexport const postTipsAction = (tipData, setpopSure, setpopTip, setTipLoading) => async dispatch => {\n  console.log(\"Tips Action Act\");\n\n  try {\n    const {\n      data\n    } = await axs.postTipsApi(tipData);\n    const newTip = data.newTip;\n    const tippedPost = data.tippedPost;\n    console.log(tippedPost);\n    dispatch({\n      type: 'POST_TIP',\n      payload: newTip\n    });\n\n    if (newTip.type === 'post') {\n      dispatch({\n        type: 'TIP_DIARY',\n        payload: tippedPost\n      });\n    }\n\n    setpopSure(false);\n    setpopTip(false);\n    setTipLoading(false);\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Midwares/rdx/actions/tipsAction.js"],"names":["axs","getTipsAction","postId","dispatch","data","getTipsApi","console","log","type","payload","error","postTipsAction","tipData","setpopSure","setpopTip","setTipLoading","postTipsApi","newTip","tippedPost"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,OAArB;AAEA,OAAO,MAAMC,aAAa,GAAIC,MAAD,IAAY,MAAOC,QAAP,IAAoB;AACzD,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMJ,GAAG,CAACK,UAAJ,CAAeH,MAAf,CAArB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEAD,IAAAA,QAAQ,CAAE;AAACK,MAAAA,IAAI,EAAE,eAAP;AAAwBC,MAAAA,OAAO,EAAEL;AAAjC,KAAF,CAAR;AAIH,GARD,CAQE,OAAMM,KAAN,EAAa;AACXJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AAEA,WAAO,KAAP;AACH;AACJ,CAdM;AAiBP,OAAO,MAAMC,cAAc,GAAG,CAACC,OAAD,EAAUC,UAAV,EAAsBC,SAAtB,EAAiCC,aAAjC,KAAmD,MAAOZ,QAAP,IAAoB;AACjGG,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,MAAG;AACC,UAAM;AAACH,MAAAA;AAAD,QAAS,MAAMJ,GAAG,CAACgB,WAAJ,CAAgBJ,OAAhB,CAArB;AACA,UAAMK,MAAM,GAAGb,IAAI,CAACa,MAApB;AACA,UAAMC,UAAU,GAAGd,IAAI,CAACc,UAAxB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYW,UAAZ;AAGAf,IAAAA,QAAQ,CAAE;AAACK,MAAAA,IAAI,EAAE,UAAP;AAAmBC,MAAAA,OAAO,EAAEQ;AAA5B,KAAF,CAAR;;AAEA,QAAIA,MAAM,CAACT,IAAP,KAAgB,MAApB,EAA2B;AACvBL,MAAAA,QAAQ,CAAE;AAACK,QAAAA,IAAI,EAAE,WAAP;AAAoBC,QAAAA,OAAO,EAAES;AAA7B,OAAF,CAAR;AACH;;AAEDL,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAC,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAC,IAAAA,aAAa,CAAC,KAAD,CAAb;AAEH,GAjBD,CAiBE,OAAML,KAAN,EAAa;AACXJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH;AACJ,CAtBM","sourcesContent":["import * as axs from './axs';\n\nexport const getTipsAction = (postId) => async (dispatch) => {\n    try{\n        const {data} = await axs.getTipsApi(postId);\n        console.log(data);\n\n        dispatch ({type: 'GET_POST_TIPS', payload: data});\n\n        \n\n    } catch(error) {\n        console.log(error); \n\n        return false;\n    } \n}\n\n\nexport const postTipsAction = (tipData, setpopSure, setpopTip, setTipLoading) => async (dispatch) => {\n    console.log(\"Tips Action Act\");\n    try{\n        const {data} = await axs.postTipsApi(tipData); \n        const newTip = data.newTip;\n        const tippedPost = data.tippedPost; \n        console.log(tippedPost);\n        \n    \n        dispatch ({type: 'POST_TIP', payload: newTip});\n\n        if (newTip.type === 'post'){ \n            dispatch ({type: 'TIP_DIARY', payload: tippedPost});\n        }  \n\n        setpopSure(false);\n        setpopTip(false);\n        setTipLoading(false);\n        \n    } catch(error) {  \n        console.log(error);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}