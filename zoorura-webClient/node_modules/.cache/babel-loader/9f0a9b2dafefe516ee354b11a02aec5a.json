{"ast":null,"code":"export const notificationsReducer = (notifications = [], action) => {\n  switch (action.type) {\n    case 'POST_NOTIFICATIONS':\n      return notifications;\n\n    case 'GET_NOTIFICATIONS':\n      return action.payload;\n\n    case 'READ_NOTIFICATIONS':\n      //const remaining = notifications.filter((notification)=> notification._id !== action.payload._id);\n      const markedRead = notifications.map(notification => notification._id === action.payload._id ? action.payload : notification); //return [...notifications, action.payload];\n\n      console.log(markedRead); //return remaining.concat(action.payload); \n\n      return markedRead;\n\n    case 'SOCKET_GOT_NOTIFICATION':\n      return [...notifications, action.payload];\n\n    default:\n      return notifications;\n  }\n};","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Midwares/rdx/reducers/notificationsReducer.js"],"names":["notificationsReducer","notifications","action","type","payload","markedRead","map","notification","_id","console","log"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAG,CAACC,aAAa,GAAG,EAAjB,EAAqBC,MAArB,KAAgC;AAEhE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,oBAAL;AACI,aAAOF,aAAP;;AACJ,SAAK,mBAAL;AACI,aAAOC,MAAM,CAACE,OAAd;;AACJ,SAAK,oBAAL;AAEG;AACC,YAAMC,UAAU,GAAGJ,aAAa,CAACK,GAAd,CAAmBC,YAAD,IAAkBA,YAAY,CAACC,GAAb,KAAqBN,MAAM,CAACE,OAAP,CAAeI,GAApC,GAA0CN,MAAM,CAACE,OAAjD,GAA2DG,YAA/F,CAAnB,CAHJ,CAII;;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ,EALJ,CAMI;;AACA,aAAOA,UAAP;;AAEJ,SAAK,yBAAL;AACI,aAAO,CAAC,GAAGJ,aAAJ,EAAmBC,MAAM,CAACE,OAA1B,CAAP;;AACJ;AACI,aAAOH,aAAP;AAjBR;AAoBF,CAtBK","sourcesContent":["export const notificationsReducer = (notifications = [], action) => {\n     \n    switch(action.type) {\n        case 'POST_NOTIFICATIONS': \n            return notifications;\n        case 'GET_NOTIFICATIONS': \n            return action.payload;\n        case 'READ_NOTIFICATIONS': \n\n           //const remaining = notifications.filter((notification)=> notification._id !== action.payload._id);\n            const markedRead = notifications.map((notification) => notification._id === action.payload._id ? action.payload : notification);\n            //return [...notifications, action.payload];\n            console.log(markedRead);\n            //return remaining.concat(action.payload); \n            return markedRead;\n              \n        case 'SOCKET_GOT_NOTIFICATION':    \n            return [...notifications, action.payload];\n        default:\n            return notifications; \n     }\n     \n }\n\n"]},"metadata":{},"sourceType":"module"}