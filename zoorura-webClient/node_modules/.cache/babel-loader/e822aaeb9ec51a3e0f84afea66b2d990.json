{"ast":null,"code":"import * as axs from './axs';\nexport const registerAction = (formData, navigate, setVisibleError, setVisibleSuccess) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.registerApi(formData);\n\n    if (data.message === 'UsernameTaken') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else if (data.message === 'EmailTaken') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else if (data.message === 'UsernameEmailTaken') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else if (data.message === 'InputError') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      }); // navigate('/');\n\n      window.location.reload(true);\n      setVisibleSuccess(true);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const loginAction = (formData, navigate, setVisibleError, setLoading) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.loginApi(formData);\n    console.log(data.message);\n\n    if (data.message === 'LoginError') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      }); //navigate('/');\n\n      window.location.reload(true);\n      setVisibleError(true);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const verifyAction = (formData, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.verifyApi(formData);\n    dispatch({\n      type: 'GOOGLE_SIGNUP',\n      data\n    });\n    navigate('/');\n    window.location.reload(true);\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Midwares/rdx/actions/auth.js"],"names":["axs","registerAction","formData","navigate","setVisibleError","setVisibleSuccess","dispatch","data","registerApi","message","type","setLoading","window","location","reload","error","console","log","loginAction","loginApi","verifyAction","verifyApi"],"mappings":"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","sourcesContent":["import * as axs from './axs';\n\n\nexport const registerAction = (formData, navigate, setVisibleError,setVisibleSuccess,) => async (dispatch) => {\n  \n    try{\n        const {data} = await axs.registerApi(formData);\n        if (data.message === 'UsernameTaken'){\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n             setVisibleError(true); \n            setLoading(false);  \n        }else if (data.message === 'EmailTaken'){\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n             setVisibleError(true); \n            setLoading(false);  \n        }else if (data.message === 'UsernameEmailTaken'){\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n             setVisibleError(true); \n            setLoading(false);  \n        }else if (data.message === 'InputError'){\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n             setVisibleError(true); \n            setLoading(false);  \n        }else{  \n            dispatch({type: 'GOOGLE_SIGNUP', data});\n        // navigate('/');\n            window.location.reload(true);\n            setVisibleSuccess(true);\n        }\n    } catch (error){\n        console.log(error); \n    }\n}\n\n\n\n\n\nexport const loginAction = (formData, navigate, setVisibleError, setLoading) => async (dispatch) => {\n    try{\n        const {data} = await axs.loginApi(formData);\n        console.log(data.message);\n        if (data.message === 'LoginError'){\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n            setVisibleError(true); \n            setLoading(false);                 \n        } else {\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n            //navigate('/');\n             \n            window.location.reload(true);\n            setVisibleError(true); \n           \n        }\n\n    } catch (error){\n        console.log(error);\n    }\n} \n\nexport const verifyAction = (formData, navigate) => async (dispatch) => {\n    try{\n        const {data} = await axs.verifyApi(formData);\n        dispatch({type: 'GOOGLE_SIGNUP', data});\n        navigate('/');\n        window.location.reload(true);\n    } catch (error){\n        console.log(error);\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}