{"ast":null,"code":"import * as axs from './axs';\nexport const registerAction = (formData, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.registerApi(formData);\n    dispatch({\n      type: 'GOOGLE_SIGNUP',\n      data\n    }); // navigate('/');\n\n    window.location.reload(true);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const loginAction = (formData, navigate, setVisibleError) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.loginApi(formData);\n    console.log(data.message);\n\n    if (data.message === 'LoginError') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      }); //navigate('/');\n\n      window.location.reload(true);\n      setVisibleError(true);\n      setLoading(false);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const verifyAction = (formData, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.verifyApi(formData);\n    dispatch({\n      type: 'GOOGLE_SIGNUP',\n      data\n    });\n    navigate('/');\n    window.location.reload(true);\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Midwares/rdx/actions/auth.js"],"names":["axs","registerAction","formData","navigate","dispatch","data","registerApi","type","window","location","reload","error","console","log","loginAction","setVisibleError","loginApi","message","setLoading","verifyAction","verifyApi"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,OAArB;AAGA,OAAO,MAAMC,cAAc,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB,MAAOC,QAAP,IAAoB;AACtE,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAML,GAAG,CAACM,WAAJ,CAAgBJ,QAAhB,CAArB;AACAE,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,eAAP;AAAwBF,MAAAA;AAAxB,KAAD,CAAR,CAFD,CAGA;;AACCG,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB;AACH,GALD,CAKE,OAAOC,KAAP,EAAa;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CATM;AAeP,OAAO,MAAMG,WAAW,GAAG,CAACZ,QAAD,EAAWC,QAAX,EAAqBY,eAArB,KAAyC,MAAOX,QAAP,IAAoB;AACpF,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAML,GAAG,CAACgB,QAAJ,CAAad,QAAb,CAArB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACY,OAAjB;;AACA,QAAIZ,IAAI,CAACY,OAAL,KAAiB,YAArB,EAAkC;AAC9Bb,MAAAA,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAE,eAAP;AAAwBF,QAAAA;AAAxB,OAAD,CAAR;AACAU,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAJD,MAIO;AACHd,MAAAA,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAE,eAAP;AAAwBF,QAAAA;AAAxB,OAAD,CAAR,CADG,CAEH;;AAEAG,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB;AACAK,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AAEJ,GAhBD,CAgBE,OAAOP,KAAP,EAAa;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CApBM;AAsBP,OAAO,MAAMQ,YAAY,GAAG,CAACjB,QAAD,EAAWC,QAAX,KAAwB,MAAOC,QAAP,IAAoB;AACpE,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAML,GAAG,CAACoB,SAAJ,CAAclB,QAAd,CAArB;AACAE,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,eAAP;AAAwBF,MAAAA;AAAxB,KAAD,CAAR;AACAF,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACAK,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB;AACH,GALD,CAKE,OAAOC,KAAP,EAAa;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CATM","sourcesContent":["import * as axs from './axs';\n\n\nexport const registerAction = (formData, navigate) => async (dispatch) => {\n    try{\n        const {data} = await axs.registerApi(formData);\n        dispatch({type: 'GOOGLE_SIGNUP', data});\n       // navigate('/');\n        window.location.reload(true);\n    } catch (error){\n        console.log(error);\n    }\n}\n\n\n\n\n\nexport const loginAction = (formData, navigate, setVisibleError) => async (dispatch) => {\n    try{\n        const {data} = await axs.loginApi(formData);\n        console.log(data.message);\n        if (data.message === 'LoginError'){\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n            setVisibleError(true); \n            setLoading(false);                 \n        } else {\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n            //navigate('/');\n             \n            window.location.reload(true);\n            setVisibleError(true); \n            setLoading(false); \n        }\n\n    } catch (error){\n        console.log(error);\n    }\n} \n\nexport const verifyAction = (formData, navigate) => async (dispatch) => {\n    try{\n        const {data} = await axs.verifyApi(formData);\n        dispatch({type: 'GOOGLE_SIGNUP', data});\n        navigate('/');\n        window.location.reload(true);\n    } catch (error){\n        console.log(error);\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}