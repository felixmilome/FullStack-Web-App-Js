{"ast":null,"code":"var _jsxFileName = \"/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Body/PostFrameTips.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getTipsAction } from '../Midwares/rdx/actions/tipsAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostFrameTips = ({\n  diaryId\n}) => {\n  _s();\n\n  const tippersAll = useSelector(state => state.tipsReducer);\n  const dispatch = useDispatch();\n  const availableTippers = tippersAll.filter(tipper => tipper.tippedPostId === diaryId);\n  useEffect(() => {\n    if (!availableTippers.length) {\n      dispatch(getTipsAction(diaryId));\n    }\n  }, [dispatch]); //const availableTippers = tippersAll.filter(tipper => tipper.tippedPostId === diaryId);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex max-h-full text-xs text-gray-600  z-30 top-1 left-0 max-w-1/2 absolute overflow-scroll\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" border border-gray-300 p-2 mx-auto h-full bg-gray-200 rounded\",\n      children: availableTippers && availableTippers.length > 0 && availableTippers.map(tipper => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-0.5\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"@\", tipper.tipperMiniProfile.userName, \" : \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\" \", tipper.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 75\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostFrameTips, \"Fwkb/lV+3YPVB0QRYSaBqwWekYo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PostFrameTips;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostFrameTips\");","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Body/PostFrameTips.jsx"],"names":["useSelector","useDispatch","useEffect","getTipsAction","PostFrameTips","diaryId","tippersAll","state","tipsReducer","dispatch","availableTippers","filter","tipper","tippedPostId","length","map","tipperMiniProfile","userName","amount"],"mappings":";;;AAAA,SAAQA,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,aAAT,QAA8B,oCAA9B;;AAEA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAAA;;AAExC,QAAMC,UAAU,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,WAAlB,CAA9B;AAEA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAMS,gBAAgB,GAAGJ,UAAU,CAACK,MAAX,CAAkBC,MAAM,IAAIA,MAAM,CAACC,YAAP,KAAwBR,OAApD,CAAzB;AAEAH,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAG,CAACQ,gBAAgB,CAACI,MAArB,EAA4B;AAExBL,MAAAA,QAAQ,CAACN,aAAa,CAACE,OAAD,CAAd,CAAR;AACH;AAEJ,GAPQ,EAON,CAACI,QAAD,CAPM,CAAT,CARwC,CAkBxC;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,6FAAf;AAAA,2BACY;AAAK,MAAA,SAAS,EAAC,gEAAf;AAAA,gBACCC,gBAAgB,IAAIA,gBAAgB,CAACI,MAAjB,GAA0B,CAA9C,IACGJ,gBAAgB,CAACK,GAAjB,CAAsBH,MAAD,iBACjB;AAAK,QAAA,SAAS,EAAE,OAAhB;AAAA,+BACI;AAAA,0BAAKA,MAAM,CAACI,iBAAP,CAAyBC,QAA9B,sBAA0C;AAAA,4BAAKL,MAAM,CAACM,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAFJ;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAnCM;;GAAMd,a;UAEUJ,W,EAEFC,W;;;KAJRG,a","sourcesContent":["import {useSelector, useDispatch} from 'react-redux';\nimport { useEffect } from 'react';\nimport { getTipsAction } from '../Midwares/rdx/actions/tipsAction';\n\nexport const PostFrameTips = ({diaryId}) => {\n\n    const tippersAll = useSelector((state) => state.tipsReducer);\n   \n    const dispatch = useDispatch(); \n\n    const availableTippers = tippersAll.filter(tipper => tipper.tippedPostId === diaryId);\n   \n    useEffect(() => {     \n       \n        if(!availableTippers.length){\n            \n            dispatch(getTipsAction(diaryId));    \n        }\n\n    }, [dispatch]); \n\n\n    //const availableTippers = tippersAll.filter(tipper => tipper.tippedPostId === diaryId);\n\n\n    return (\n        <div className='flex max-h-full text-xs text-gray-600  z-30 top-1 left-0 max-w-1/2 absolute overflow-scroll'>\n                    <div className=\" border border-gray-300 p-2 mx-auto h-full bg-gray-200 rounded\"> \n                    {availableTippers && availableTippers.length > 0 &&\n                        availableTippers.map((tipper) =>(\n                            <div className= \"p-0.5\"> \n                                <p>@{tipper.tipperMiniProfile.userName} : <b> {tipper.amount}</b></p>\n                            </div>\n                            ))\n                        }                    \n                        </div>\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}