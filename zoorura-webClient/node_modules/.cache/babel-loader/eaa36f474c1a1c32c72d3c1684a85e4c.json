{"ast":null,"code":"var fs = require('fs');\n\nvar path = require('path');\n\nvar os = require('os');\n\nfunction matchObject(item, str) {\n  return Object.prototype.toString.call(item) === '[object ' + str + ']';\n}\n\nfunction checkStat(name, fn) {\n  try {\n    return fn(name);\n  } catch (err) {\n    if (/^(ENOENT|EPERM|EACCES)$/.test(err.code)) {\n      if (err.code !== 'ENOENT') {\n        console.warn('Warning: Cannot access %s', name);\n      }\n\n      return false;\n    }\n\n    throw err;\n  }\n}\n\nvar is = {\n  nil: function (item) {\n    return item == null;\n  },\n  array: function (item) {\n    return Array.isArray(item);\n  },\n  emptyObject: function (item) {\n    for (var key in item) {\n      return false;\n    }\n\n    return true;\n  },\n  buffer: function (item) {\n    return Buffer.isBuffer(item);\n  },\n  regExp: function (item) {\n    return matchObject(item, 'RegExp');\n  },\n  string: function (item) {\n    return matchObject(item, 'String');\n  },\n  func: function (item) {\n    return typeof item === 'function';\n  },\n  number: function (item) {\n    return matchObject(item, 'Number');\n  },\n  exists: function (name) {\n    return fs.existsSync(name);\n  },\n  file: function (name) {\n    return checkStat(name, function (n) {\n      return fs.statSync(n).isFile();\n    });\n  },\n  samePath: function (a, b) {\n    return path.resolve(a) === path.resolve(b);\n  },\n  directory: function (name) {\n    return checkStat(name, function (n) {\n      return fs.statSync(n).isDirectory();\n    });\n  },\n  symbolicLink: function (name) {\n    return checkStat(name, function (n) {\n      return fs.lstatSync(n).isSymbolicLink();\n    });\n  },\n  windows: function () {\n    return os.platform() === 'win32';\n  }\n};\nmodule.exports = is;","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/node_modules/node-watch/lib/is.js"],"names":["fs","require","path","os","matchObject","item","str","Object","prototype","toString","call","checkStat","name","fn","err","test","code","console","warn","is","nil","array","Array","isArray","emptyObject","key","buffer","Buffer","isBuffer","regExp","string","func","number","exists","existsSync","file","n","statSync","isFile","samePath","a","b","resolve","directory","isDirectory","symbolicLink","lstatSync","isSymbolicLink","windows","platform","module","exports"],"mappings":"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","sourcesContent":["var fs = require('fs');\nvar path = require('path');\nvar os = require('os');\n\nfunction matchObject(item, str) {\n  return Object.prototype.toString.call(item)\n    === '[object ' + str + ']';\n}\n\nfunction checkStat(name, fn) {\n  try {\n    return fn(name);\n  } catch (err) {\n    if (/^(ENOENT|EPERM|EACCES)$/.test(err.code)) {\n      if (err.code !== 'ENOENT') {\n        console.warn('Warning: Cannot access %s', name);\n      }\n      return false;\n    }\n    throw err;\n  }\n}\n\nvar is = {\n  nil: function(item) {\n    return item == null;\n  },\n  array: function(item) {\n    return Array.isArray(item);\n  },\n  emptyObject: function(item) {\n    for (var key in item) {\n      return false;\n    }\n    return true;\n  },\n  buffer: function(item) {\n    return Buffer.isBuffer(item);\n  },\n  regExp: function(item) {\n    return matchObject(item, 'RegExp');\n  },\n  string: function(item) {\n    return matchObject(item, 'String');\n  },\n  func: function(item) {\n    return typeof item === 'function';\n  },\n  number: function(item) {\n    return matchObject(item, 'Number');\n  },\n  exists: function(name) {\n    return fs.existsSync(name);\n  },\n  file: function(name) {\n    return checkStat(name, function(n) {\n      return fs.statSync(n).isFile()\n    });\n  },\n  samePath: function(a, b) {\n    return path.resolve(a) === path.resolve(b);\n  },\n  directory: function(name) {\n    return checkStat(name, function(n) {\n      return fs.statSync(n).isDirectory()\n    });\n  },\n  symbolicLink: function(name) {\n    return checkStat(name, function(n) {\n      return fs.lstatSync(n).isSymbolicLink();\n    });\n  },\n  windows: function() {\n    return os.platform() === 'win32';\n  }\n};\n\nmodule.exports = is;\n"]},"metadata":{},"sourceType":"script"}