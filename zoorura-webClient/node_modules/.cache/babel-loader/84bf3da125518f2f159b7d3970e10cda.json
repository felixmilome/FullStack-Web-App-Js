{"ast":null,"code":"var _jsxFileName = \"/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Sidebars/RightbarMob.jsx\",\n    _s = $RefreshSig$();\n\nimport RightbarmobRow from './RightbarmobRow.jsx';\nimport ContactMod from '../Modals/ContactMod.jsx';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'; //import { UserIcon } from '@heroicons/react/outline';\n\nimport { BeatLoader } from \"react-spinners\";\nimport { getMessagesAction } from \"../Midwares/rdx/actions/messagesAction.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction RightbarMob({\n  user,\n  setpopContacts,\n  unreadMessages\n}) {\n  _s();\n\n  const [popChatBox, setpopChatBox] = useState(false);\n  const [displayed, setDisplayed] = useState(null);\n  const [viewer, setViewer] = useState(null);\n  const [convoId, setConvoId] = useState(null);\n  const convos = useSelector(state => state.convosReducer);\n  const convoState = useSelector(state => state.convosStateReducer);\n  const dispatch = useDispatch(); // useEffect(() => {\n\n  dispatch({\n    type: \"SEARCHING_CONVO\"\n  }); // });\n\n  console.log(convoState);\n\n  const chatSetterDirect = (guestData, hostData, idConvo) => {\n    setDisplayed(guestData);\n    setViewer(hostData);\n    setConvoId(idConvo);\n    getMessagesAction(idConvo);\n  };\n\n  const chatSetterInverse = (guestData, hostData, idConvo) => {\n    setDisplayed(hostData);\n    setViewer(guestData);\n    setConvoId(idConvo);\n    getMessagesAction(idConvo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" p-7 w-full sm:w-1/4 m-x-4 bg-gray-100 z-10 fixed right-0 sm:right-1.5 top-24 sm:top-20 rounded-md h-screen overflow-y-auto overflow-x-hidden\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-scroll\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-1 font-bold text-gray-500 p-1\",\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-60\",\n        children: [popChatBox && /*#__PURE__*/_jsxDEV(ContactMod, {\n          setpopChatBox: setpopChatBox,\n          convoId: convoId,\n          displayed: displayed,\n          viewer: viewer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), convos.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: convos.map(convo => {\n            // const unreadConvoMessage = unreadMessages.filter(unreadMessage => unreadMessage.read === false && (unreadMessage.receiver._id === user.result._id || unreadMessage.receiver === user.result._id ));\n            // console.log(unreadConvoMessage);\n            if (convo.host._id === user.result._id) {\n              const unreadConvoMessage = unreadMessages.filter(unreadMessage => unreadMessage.read === false && unreadMessage.sender._id === convo.guest._id && (unreadMessage.receiver._id === user.result._id || unreadMessage.receiver === user.result._id));\n              return (\n                /*#__PURE__*/\n                //X--DISPLAY (THEM)GUEST: THEY ARE GUEST \n                _jsxDEV(\"div\", {\n                  onClick: () => {\n                    chatSetterDirect(convo.guest, convo.host, convo._id);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(RightbarmobRow, {\n                    popChatBox: popChatBox,\n                    setpopChatBox: setpopChatBox,\n                    Src: convo.guest.dpUrl,\n                    title: unreadConvoMessage.length,\n                    GuestName: convo.guest.userName,\n                    Points: convo.tip\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 45\n                  }, this)\n                }, convo._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 41\n                }, this)\n              );\n            }\n\n            if (convo.host._id !== user.result._id) {\n              const unreadConvoMessage = unreadMessages.filter(unreadMessage => unreadMessage.read === false && unreadMessage.sender._id === convo.host._id && (unreadMessage.receiver._id === convo.guest._id || unreadMessage.receiver === convo.guest._id)); // const guest = JSON.stringify(convo.host);\n              // const host = JSON.stringify(convo.guest);\n              // const guest = convo.guest;\n\n              return (\n                /*#__PURE__*/\n                //Y--DISPLAY (THEM)HOST: THEY ARE HOST \n                _jsxDEV(\"div\", {\n                  onClick: () => {\n                    chatSetterInverse(convo.guest, convo.host, convo._id);\n                  },\n                  children: [unreadConvoMessage.length && /*#__PURE__*/_jsxDEV(RightbarmobRow, {\n                    popChatBox: popChatBox,\n                    setpopChatBox: setpopChatBox,\n                    Src: convo.host.dpUrl,\n                    title: unreadConvoMessage.length,\n                    GuestName: convo.host.userName,\n                    Points: convo.tip\n                  }, convo._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 57\n                  }, this), unreadConvoMessage.length === 0 && /*#__PURE__*/_jsxDEV(RightbarmobRow, {\n                    popChatBox: popChatBox,\n                    setpopChatBox: setpopChatBox,\n                    Src: convo.host.dpUrl,\n                    title: unreadConvoMessage.length,\n                    GuestName: convo.host.userName,\n                    Points: convo.tip\n                  }, convo._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 57\n                  }, this)]\n                }, convo._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 41\n                }, this)\n              );\n            }\n          })\n        }, void 0, false), convos == \"NO_CONVO\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(RightbarmobRow, {\n            popChatBox: popChatBox,\n            setpopChatBox: setpopChatBox,\n            title: \"NO CONVOS FOUND\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this)\n        }, void 0, false), convos.length === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(BeatLoader, {\n            size: 24,\n            color: \"white\",\n            loading: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(RightbarmobRow, {\n            popChatBox: popChatBox,\n            setpopChatBox: setpopChatBox,\n            title: \"Fetchincg Convos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RightbarMob, \"5j4GPfyGnU2bCQPiQx2CybnfVds=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = RightbarMob;\nexport default RightbarMob;\n\nvar _c;\n\n$RefreshReg$(_c, \"RightbarMob\");","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Sidebars/RightbarMob.jsx"],"names":["RightbarmobRow","ContactMod","useState","useEffect","useSelector","useDispatch","BeatLoader","getMessagesAction","RightbarMob","user","setpopContacts","unreadMessages","popChatBox","setpopChatBox","displayed","setDisplayed","viewer","setViewer","convoId","setConvoId","convos","state","convosReducer","convoState","convosStateReducer","dispatch","type","console","log","chatSetterDirect","guestData","hostData","idConvo","chatSetterInverse","length","map","convo","host","_id","result","unreadConvoMessage","filter","unreadMessage","read","sender","guest","receiver","dpUrl","userName","tip"],"mappings":"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","sourcesContent":["import RightbarmobRow from './RightbarmobRow.jsx';\nimport ContactMod from '../Modals/ContactMod.jsx';\nimport { useState, useEffect } from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\n//import { UserIcon } from '@heroicons/react/outline';\nimport {BeatLoader} from \"react-spinners\";\nimport{getMessagesAction} from \"../Midwares/rdx/actions/messagesAction.js\"\n\n\nfunction RightbarMob({user, setpopContacts, unreadMessages}){\n\n    const[popChatBox, setpopChatBox] = useState(false);\n    const[displayed, setDisplayed] = useState(null);\n    const[viewer, setViewer] = useState(null);\n    const[convoId, setConvoId] = useState(null); \n    const convos = useSelector((state) => state.convosReducer);\n    const convoState = useSelector((state) => state.convosStateReducer);\n\n    const dispatch = useDispatch();\n\n    // useEffect(() => {\n\n        dispatch({type:\"SEARCHING_CONVO\"}); \n\n    // });\n\n    console.log(convoState);\n\n\nconst chatSetterDirect = (guestData, hostData, idConvo) =>{\n    setDisplayed(guestData);\n    setViewer(hostData);\n    setConvoId(idConvo);\n    getMessagesAction(idConvo);\n  \n}\nconst chatSetterInverse = (guestData, hostData, idConvo) =>{\n    setDisplayed(hostData);\n    setViewer(guestData);\n    setConvoId(idConvo);\n    getMessagesAction(idConvo);\n  \n}\n\n\n\nreturn (\n    \n    <div className=\" p-7 w-full sm:w-1/4 m-x-4 bg-gray-100 z-10 fixed right-0 sm:right-1.5 top-24 sm:top-20 rounded-md h-screen overflow-y-auto overflow-x-hidden\">\n        <div className=\"overflow-scroll\">\n\n        <div className=\"ml-1 font-bold text-gray-500 p-1\">\n        Contacts\n        </div>\n          \n            {/* Contacts People */}\n            <div className=\"mb-60\">\n\n            {popChatBox && \n                <ContactMod setpopChatBox={setpopChatBox} convoId={convoId} displayed={displayed} viewer={viewer}/>\n            }  \n              \n               {convos.length>0 &&\n                <>\n                    {\n                        convos.map((convo) => {\n\n                           // const unreadConvoMessage = unreadMessages.filter(unreadMessage => unreadMessage.read === false && (unreadMessage.receiver._id === user.result._id || unreadMessage.receiver === user.result._id ));\n                           // console.log(unreadConvoMessage);\n                            if (convo.host._id === user.result._id){\n\n                                const unreadConvoMessage = unreadMessages.filter(unreadMessage =>\n                                     (unreadMessage.read === false)\n                                      && (unreadMessage.sender._id === convo.guest._id)\n                                       && (unreadMessage.receiver._id === user.result._id\n                                         || unreadMessage.receiver === user.result._id ));\n                              \n                                    return (    //X--DISPLAY (THEM)GUEST: THEY ARE GUEST \n                                        <div key={convo._id}\n\n                                            onClick ={()=>{\n                                            chatSetterDirect(convo.guest, convo.host, convo._id)\n                                            }} >\n\n                                            <RightbarmobRow popChatBox={popChatBox}  setpopChatBox={setpopChatBox} \n                                            Src = {convo.guest.dpUrl} title ={unreadConvoMessage.length} GuestName= {convo.guest.userName} Points= {convo.tip} /> \n                                           \n                                            {/* {popChatBox && \n                                                <ContactMod setpopChatBox={setpopChatBox} convoId={convo._id} guest={JSON.parse(guest)} host={JSON.parse(host)}/>\n                                            }   */}\n                                        </div> \n                                    )\n                                }\n                                \n                                \n                            if (convo.host._id !== user.result._id) {\n\n                                const unreadConvoMessage = unreadMessages.filter(unreadMessage => \n                                    (unreadMessage.read === false)\n                                     && (unreadMessage.sender._id === convo.host._id)\n                                      && (unreadMessage.receiver._id === convo.guest._id\n                                         || unreadMessage.receiver === convo.guest._id ));\n                                \n                                // const guest = JSON.stringify(convo.host);\n                                // const host = JSON.stringify(convo.guest);\n                                // const guest = convo.guest;\n\n                                    return ( //Y--DISPLAY (THEM)HOST: THEY ARE HOST \n                                        <div key={convo._id} \n                                        \n                                            onClick ={()=>{\n                                                chatSetterInverse(convo.guest, convo.host, convo._id)\n                                            }\n                                            }>\n                                                {unreadConvoMessage.length &&\n                                                        <RightbarmobRow key={convo._id} popChatBox={popChatBox} setpopChatBox={setpopChatBox} \n                                                         Src = {convo.host.dpUrl} title ={unreadConvoMessage.length} GuestName= {convo.host.userName} Points= {convo.tip} />\n                                                }\n                                                {unreadConvoMessage.length === 0 &&\n                                                        <RightbarmobRow key={convo._id} popChatBox={popChatBox} setpopChatBox={setpopChatBox} \n                                                        Src = {convo.host.dpUrl} title ={unreadConvoMessage.length} GuestName= {convo.host.userName} Points= {convo.tip} />\n                                                }\n                                            {/* {popChatBox && \n                                                <ContactMod setpopChatBox={setpopChatBox} convoId={convo._id} guest={host} host={guest}/>\n                                            }   */}\n                                        </div> \n                                    )\n                                \n                            }\n                        }\n                    )\n                    }\n                    </> \n                }\n                {convos == \"NO_CONVO\" &&\n                <>\n                  \n                            <RightbarmobRow popChatBox={popChatBox}   setpopChatBox={setpopChatBox} title =\"NO CONVOS FOUND\"/>\n                 \n                </> \n                }\n                {convos.length === 0 &&\n                <>\n                  \n                            <BeatLoader size={24} color='white' loading/>\n                            <RightbarmobRow  popChatBox={popChatBox}  setpopChatBox={setpopChatBox}  title =\"Fetchincg Convos\" />\n\n                </> \n                }\n\n            </div> \n    </div>\n</div>\n);\n}\nexport default RightbarMob;"]},"metadata":{},"sourceType":"module"}