{"ast":null,"code":"var _jsxFileName = \"/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Body/ChatHunt.jsx\",\n    _s = $RefreshSig$();\n\nimport { ChatHuntRow } from \"./ChatHuntRow\";\nimport { IoMdChatboxes } from 'react-icons/io';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from 'react';\nimport { getUsersAction } from '../Midwares/rdx/actions/profileAction.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ChatHunt = ({\n  setpopContacts\n}) => {\n  _s();\n\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const follows = useSelector(state => state.followsReducer);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const userObj = {\n      type: 'ChatHunt'\n    };\n    dispatch(getUsersAction(userObj));\n  }, []);\n\n  const setpopContactsFalse = () => {\n    setpopContacts(false);\n    console.log('setCons');\n  };\n\n  const chatPeople = useSelector(state => state.chatHuntReducer);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"top-0  w-screen h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed h-16 top-24 z-20  xl:top-16 items-center  top-0 flex justify-center  w-full m-auto space-x-1 \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center p-2 bg-gray-200 lg:w-2/5 w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2 bg-gray-800 rounded-full\",\n          children: /*#__PURE__*/_jsxDEV(IoMdChatboxes, {\n            className: \" h-4 w-4 text-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" font-bold text-normal text-gray-800 p-1 rounded-md text-center\",\n          children: \"Chat Hunt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-400 rounded-xl grid grid-cols-2 mx-auto mt-14   w-full lg:w-2/5 \",\n        children: chatPeople.map(miniProfile => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: !user.result.blocked.includes(miniProfile._id) && !user.result.blockers.includes(miniProfile) && !miniProfile.blockers.includes(user.result._id) && !miniProfile.blocked.includes(user.result._id) && !follows.includes(miniProfile._id) && miniProfile._id !== user.result._id && /*#__PURE__*/_jsxDEV(ChatHuntRow, {\n            miniProfile: miniProfile,\n            setpopContactsFalse: setpopContactsFalse\n          }, miniProfile._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 41\n          }, this)\n        }, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatHunt, \"0e5U+ykDZNgd2z52Lt9JRWxZEBs=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = ChatHunt;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatHunt\");","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Body/ChatHunt.jsx"],"names":["ChatHuntRow","IoMdChatboxes","useDispatch","useSelector","useEffect","getUsersAction","ChatHunt","setpopContacts","user","JSON","parse","localStorage","getItem","follows","state","followsReducer","dispatch","userObj","type","setpopContactsFalse","console","log","chatPeople","chatHuntReducer","map","miniProfile","result","blocked","includes","_id","blockers"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,eAA5B;AACA,SAAQC,aAAR,QAA4B,gBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,SAAQC,cAAR,QAA6B,0CAA7B;;;AAKA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAsB;AAAA;;AAC1C,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAb;AACA,QAAMC,OAAO,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,cAAlB,CAA3B;AACA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,OAAO,GAAG;AAACC,MAAAA,IAAI,EAAC;AAAN,KAAhB;AACAF,IAAAA,QAAQ,CAACX,cAAc,CAACY,OAAD,CAAf,CAAR;AACD,GAHM,EAGJ,EAHI,CAAT;;AAKA,QAAME,mBAAmB,GAAG,MAAM;AAE9BZ,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEH,GALD;;AAQE,QAAMC,UAAU,GAAGnB,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACS,eAAlB,CAA9B;AAEJ,sBACE;AAAK,IAAA,SAAS,EAAE,wBAAhB;AAAA,4BAEQ;AAAK,MAAA,SAAS,EAAC,qGAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,qDAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA,iCACA,QAAC,aAAD;AAAe,YAAA,SAAS,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,iEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFR,eAcI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BAEI;AAAK,QAAA,SAAS,EAAE,0EAAhB;AAAA,kBAKgBD,UAAU,CAACE,GAAX,CAAgBC,WAAD,iBACX;AAAA,oBACK,CAACjB,IAAI,CAACkB,MAAL,CAAYC,OAAZ,CAAoBC,QAApB,CAA6BH,WAAW,CAACI,GAAzC,CAAD,IAAkD,CAACrB,IAAI,CAACkB,MAAL,CAAYI,QAAZ,CAAqBF,QAArB,CAA8BH,WAA9B,CAAnD,IACD,CAACA,WAAW,CAACK,QAAZ,CAAqBF,QAArB,CAA8BpB,IAAI,CAACkB,MAAL,CAAYG,GAA1C,CADA,IACkD,CAACJ,WAAW,CAACE,OAAZ,CAAoBC,QAApB,CAA6BpB,IAAI,CAACkB,MAAL,CAAYG,GAAzC,CADnD,IAED,CAAChB,OAAO,CAACe,QAAR,CAAiBH,WAAW,CAACI,GAA7B,CAFA,IAEsCJ,WAAW,CAACI,GAAZ,KAAoBrB,IAAI,CAACkB,MAAL,CAAYG,GAFtE,iBAGG,QAAC,WAAD;AAAoC,YAAA,WAAW,EAAEJ,WAAjD;AAA8D,YAAA,mBAAmB,EAAEN;AAAnF,aAAmBM,WAAW,CAACI,GAA/B;AAAA;AAAA;AAAA;AAAA;AAJR,yBADJ;AALhB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CA5DM;;GAAMvB,Q;UAEOH,W,EACCD,W,EAeIC,W;;;KAlBZG,Q","sourcesContent":["import { ChatHuntRow } from \"./ChatHuntRow\";\nimport {IoMdChatboxes} from 'react-icons/io';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {useEffect} from 'react';\nimport {getUsersAction} from '../Midwares/rdx/actions/profileAction.js';\n\n\n\n\nexport const ChatHunt = ({setpopContacts}) => { \n    const user = JSON.parse(localStorage.getItem('profile'));\n    const follows = useSelector((state) => state.followsReducer);\n    const dispatch = useDispatch ();\n\n    useEffect(() => {\n        const userObj = {type:'ChatHunt'}; \n        dispatch(getUsersAction(userObj));\n      }, []);\n\n    const setpopContactsFalse = () => {\n\n        setpopContacts(false);\n        console.log('setCons');\n\n    }\n\n\n      const chatPeople = useSelector((state) => state.chatHuntReducer);\n\n  return (\n    <div className= 'top-0  w-screen h-full'>\n\n            <div className='fixed h-16 top-24 z-20  xl:top-16 items-center  top-0 flex justify-center  w-full m-auto space-x-1 '>\n                <div className='flex justify-center p-2 bg-gray-200 lg:w-2/5 w-full'>\n                    <div className='p-2 bg-gray-800 rounded-full'>\n                    <IoMdChatboxes className=\" h-4 w-4 text-white\"/> \n                    </div> \n                    <div className=' font-bold text-normal text-gray-800 p-1 rounded-md text-center'>\n                            Chat Hunt\n                    </div>\n                </div>\n\n            </div> \n       \n        <div className='flex justify-center'>\n\n            <div className= 'bg-gray-400 rounded-xl grid grid-cols-2 mx-auto mt-14   w-full lg:w-2/5 '>    \n                {/* Person Box MAPS */}\n\n                {\n                            \n                            chatPeople.map((miniProfile) =>(\n                                <>\n                                    {!user.result.blocked.includes(miniProfile._id) && !user.result.blockers.includes(miniProfile)  &&\n                                    !miniProfile.blockers.includes(user.result._id) && !miniProfile.blocked.includes(user.result._id) && \n                                    !follows.includes(miniProfile._id) &&  miniProfile._id !== user.result._id &&\n                                        <ChatHuntRow  key={miniProfile._id} miniProfile={miniProfile} setpopContactsFalse={setpopContactsFalse} />\n                                    } \n                                </>  \n                            ))\n                        } \n            \n\n            </div>\n        </div>\n\n\n    </div>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}