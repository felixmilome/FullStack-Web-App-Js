{"ast":null,"code":"import * as axs from './axs';\nexport const getTipsAction = postId => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.getTipsApi(postId);\n    console.log(data);\n    dispatch({\n      type: 'GET_POST_TIPS',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n};\nexport const messageTipsAction = (tipData, setpopSure, setpopTip, setTipLoading, setTipDelivery, socket) => async dispatch => {\n  console.log(\"Tips Action Act\");\n\n  try {\n    const {\n      data\n    } = await axs.postTipsApi(tipData);\n    const newTip = data.newTip;\n    const tippedPost = data.tippedPost;\n    console.log(tippedPost);\n    dispatch({\n      type: 'POST_TIP',\n      payload: newTip\n    });\n\n    if (newTip.type === 'post') {\n      dispatch({\n        type: 'TIP_DIARY',\n        payload: tippedPost\n      });\n    } else if (newTip.type === 'review') {\n      dispatch({\n        type: 'TIP_REVIEW',\n        payload: tippedPost\n      });\n    } else if (newTip.type === 'message') {\n      dispatch({\n        type: 'TIP_MESSAGE',\n        payload: tippedPost\n      });\n    }\n\n    setpopSure(false);\n    setpopTip(false);\n    setTipLoading(false);\n    setTipDelivery(true);\n    setTimeout(function () {\n      setTipDelivery(false);\n    }, 2000);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const postTipsAction = (tipData, setpopSure, setpopTip, setTipLoading, setTipDelivery, socket) => async dispatch => {\n  console.log(\"Tips Action Act\");\n\n  try {\n    const {\n      data\n    } = await axs.postTipsApi(tipData);\n    const newTip = data.newTip;\n    const tippedPost = data.tippedPost;\n    console.log(tippedPost);\n    dispatch({\n      type: 'POST_TIP',\n      payload: newTip\n    });\n\n    if (newTip.type === 'post') {\n      dispatch({\n        type: 'TIP_DIARY',\n        payload: tippedPost\n      });\n    } else if (newTip.type === 'review') {\n      dispatch({\n        type: 'TIP_REVIEW',\n        payload: tippedPost\n      });\n    } else if (newTip.type === 'message') {\n      dispatch({\n        type: 'TIP_MESSAGE',\n        payload: tippedPost\n      });\n    }\n\n    setpopSure(false);\n    setpopTip(false);\n    setTipLoading(false);\n    setTipDelivery(true);\n    setTimeout(function () {\n      setTipDelivery(false);\n    }, 2000);\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Midwares/rdx/actions/tipsAction.js"],"names":["axs","getTipsAction","postId","dispatch","data","getTipsApi","console","log","type","payload","error","messageTipsAction","tipData","setpopSure","setpopTip","setTipLoading","setTipDelivery","socket","postTipsApi","newTip","tippedPost","setTimeout","postTipsAction"],"mappings":"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","sourcesContent":["import * as axs from './axs';\n\nexport const getTipsAction = (postId) => async (dispatch) => {\n    try{\n        const {data} = await axs.getTipsApi(postId);\n        console.log(data);\n\n        dispatch ({type: 'GET_POST_TIPS', payload: data});\n\n        \n\n    } catch(error) { \n        console.log(error); \n\n        return false;\n    } \n}\nexport const messageTipsAction = (tipData, setpopSure, setpopTip, setTipLoading, setTipDelivery, socket) => async (dispatch) => {\n    console.log(\"Tips Action Act\");\n    try{\n        const {data} = await axs.postTipsApi(tipData); \n        const newTip = data.newTip; \n        const tippedPost = data.tippedPost; \n        console.log(tippedPost);\n         \n    \n        dispatch ({type: 'POST_TIP', payload: newTip});\n\n        if (newTip.type === 'post'){ \n            dispatch ({type: 'TIP_DIARY', payload: tippedPost}); \n        }  else if (newTip.type === 'review'){ \n            dispatch ({type: 'TIP_REVIEW', payload: tippedPost});\n        } else if (newTip.type === 'message'){ \n            dispatch ({type: 'TIP_MESSAGE', payload: tippedPost});\n        }\n\n        setpopSure(false);\n        setpopTip(false); \n        setTipLoading(false);\n\n        setTipDelivery(true);\n        setTimeout( function() {setTipDelivery(false)}, 2000);\n        \n    } catch(error) {  \n        console.log(error);\n    }\n}\n\n\nexport const postTipsAction = (tipData, setpopSure, setpopTip, setTipLoading, setTipDelivery, socket) => async (dispatch) => {\n    console.log(\"Tips Action Act\");\n    try{\n        const {data} = await axs.postTipsApi(tipData); \n        const newTip = data.newTip; \n        const tippedPost = data.tippedPost; \n        console.log(tippedPost);\n         \n    \n        dispatch ({type: 'POST_TIP', payload: newTip});\n\n        if (newTip.type === 'post'){ \n            dispatch ({type: 'TIP_DIARY', payload: tippedPost}); \n        }  else if (newTip.type === 'review'){ \n            dispatch ({type: 'TIP_REVIEW', payload: tippedPost});\n        } else if (newTip.type === 'message'){ \n            dispatch ({type: 'TIP_MESSAGE', payload: tippedPost});\n        }\n\n        setpopSure(false);\n        setpopTip(false); \n        setTipLoading(false);\n\n        setTipDelivery(true);\n        setTimeout( function() {setTipDelivery(false)}, 2000);\n        \n    } catch(error) {  \n        console.log(error);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}