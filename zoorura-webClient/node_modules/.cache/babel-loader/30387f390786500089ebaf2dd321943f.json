{"ast":null,"code":"import * as axs from './axs';\nexport const getADiaryAction = diaryId => async dispatch => {\n  try {\n    console.log({\n      diaryId\n    });\n    const {\n      data\n    } = await axs.getADiaryApi(diaryId);\n    console.log(data);\n    dispatch({\n      type: 'GET_VISITED_DIARY',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getUsersDiariesAction = userId => async dispatch => {\n  try {\n    console.log({\n      userId\n    });\n    const {\n      data\n    } = await axs.getUsersDiariesApi(userId);\n    console.log(data);\n    dispatch({\n      type: 'GET_USERS_DIARIES',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getDiariesAction = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.getDiariesApi();\n    console.log(data);\n    const {\n      followedDiaries,\n      popularDiaries,\n      randomDiaries\n    } = data;\n    dispatch({\n      type: 'GET_FOLLOWED_DIARIES',\n      payload: followedDiaries\n    });\n    dispatch({\n      type: 'GET_POPULAR_DIARIES',\n      payload: popularDiaries\n    });\n    dispatch({\n      type: 'GET_RANDOM_DIARIES',\n      payload: randomDiaries\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const postDiariesAction = (diary, setpopPosted, setSpam) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.postDiariesApi(diary);\n\n    if (data === 'Spam') {\n      setSpam(true);\n    } else {\n      setpopPosted(true);\n      dispatch({\n        type: 'POST_DIARY',\n        payload: data\n      }); //navigate ('/');\n\n      window.location = '/';\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const postDisplayDiariesAction = (diary, setPopDisplayed, navigate, setSpam, socket) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.postDiariesApi(diary);\n    console.log(socket);\n\n    if (data === 'Spam') {\n      setSpam(true);\n      setTimeout(function () {\n        setSpam(false);\n      }, 2000);\n    } else {\n      const socketNotificationData = data.newNotification;\n      setPopDisplayed(true);\n      socket.current.emit(\"sendNotification\", {\n        //put it bottom\n        socketNotificationData\n      });\n      navigate('/');\n      window.location.reload(true);\n    } // const newDisplay = data.newDisplay;\n    // const displayedDiary = data.displayedDiary;\n    // dispatch ({type: 'POST_DIARY', payload: newDisplay});\n    // dispatch ({type: 'DIARY_DISPLAY', payload: displayedDiary});\n    // setDisplayer(true);\n    // setTimeout( function() {setDisplayer (false)}, 2000); \n\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const patchDiariesAction = (id, diariesEditData, setpopPosted, setSpam) => async dispatch => {\n  try {\n    //console.log('patchAction')\n    const {\n      data\n    } = await axs.patchDiariesApi(id, diariesEditData);\n    console.log(data);\n\n    if (data === 'Spam') {\n      setSpam(true);\n      setTimeout(function () {\n        setSpam(false);\n      }, 2000);\n    } else if (data === 'Success') {\n      setpopPosted(true); //setTimeout( function() {setpopOptions(false)}, 2000);\n\n      window.location = '/';\n    }\n  } catch (error) {\n    console.log(error.message); // console.log(diariesEditData);\n    // console.log(id);\n  }\n};\nexport const deleteDiariesAction = (id, setPopDeleted) => async dispatch => {\n  try {\n    await axs.deleteDiariesApi(id);\n    setPopDeleted(true);\n    setTimeout(function () {\n      window.location = '/';\n    }, 3000); //dispatch({type: 'DELETE_DIARY', payload: id});\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const tipDiariesAction = (id, tipperData, setpopSure, setpopTip) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.tipDiariesApi(id, tipperData);\n    dispatch({\n      type: 'TIP_DIARY',\n      payload: data\n    }); // if(dispatch)\n    // {\n\n    setpopSure(false);\n    setpopTip(false); //}\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const reviewDiariesAction = (id, reviewData, setreviewData) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.reviewDiariesApi(id, reviewData);\n    dispatch({\n      type: 'REVIEW_DIARY',\n      payload: data\n    });\n    setreviewData({\n      reviewer: '',\n      reviewerId: '',\n      body: ''\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Midwares/rdx/actions/diariesAction.js"],"names":["axs","getADiaryAction","diaryId","dispatch","console","log","data","getADiaryApi","type","payload","error","getUsersDiariesAction","userId","getUsersDiariesApi","getDiariesAction","getDiariesApi","followedDiaries","popularDiaries","randomDiaries","postDiariesAction","diary","setpopPosted","setSpam","postDiariesApi","window","location","postDisplayDiariesAction","setPopDisplayed","navigate","socket","setTimeout","socketNotificationData","newNotification","current","emit","reload","patchDiariesAction","id","diariesEditData","patchDiariesApi","message","deleteDiariesAction","setPopDeleted","deleteDiariesApi","tipDiariesAction","tipperData","setpopSure","setpopTip","tipDiariesApi","reviewDiariesAction","reviewData","setreviewData","reviewDiariesApi","reviewer","reviewerId","body"],"mappings":"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","sourcesContent":["import * as axs from './axs';\n\nexport const getADiaryAction = (diaryId) => async (dispatch) => {\n    try{\n        console.log({diaryId});\n        const {data} = await axs.getADiaryApi(diaryId);\n        console.log(data);\n\n        dispatch ({type: 'GET_VISITED_DIARY', payload: data}); \n\n    } catch(error) {\n        console.log(error); \n    }\n}\nexport const getUsersDiariesAction = (userId) => async (dispatch) => {\n    try{\n        console.log({userId});\n        const {data} = await axs.getUsersDiariesApi(userId); \n        console.log(data);\n \n        dispatch ({type: 'GET_USERS_DIARIES', payload: data}); \n\n    } catch(error) {\n        console.log(error); \n    }\n}\n \n \nexport const getDiariesAction = () => async (dispatch) => {\n    try{\n        const {data} = await axs.getDiariesApi();\n        console.log(data);\n\n        const {followedDiaries, popularDiaries, randomDiaries} = data;\n\n        dispatch ({type: 'GET_FOLLOWED_DIARIES', payload: followedDiaries});\n        dispatch ({type: 'GET_POPULAR_DIARIES', payload: popularDiaries}); \n        dispatch ({type: 'GET_RANDOM_DIARIES', payload: randomDiaries});  \n\n    } catch(error) {\n        console.log(error); \n    }\n}\nexport const postDiariesAction = (diary, setpopPosted, setSpam) => async (dispatch) => {\n    try{\n        \n\n            const {data} = await axs.postDiariesApi(diary);\n\n            if (data === 'Spam'){\n                setSpam (true);\n                \n            }else{\n                setpopPosted(true);\n\n                dispatch ({type: 'POST_DIARY', payload: data});            \n                //navigate ('/');\n                window.location = ('/') \n            }\n\n        \n    } catch(error) {\n        console.log(error);\n    }\n}\nexport const postDisplayDiariesAction = (diary, setPopDisplayed, navigate, setSpam, socket) => async (dispatch) => {\n    try{\n        \n\n\n            const {data} = await axs.postDiariesApi(diary); \n            \n            console.log(socket);\n\n            if (data === 'Spam'){ \n\n                setSpam (true);\n                setTimeout( function() {setSpam (false)}, 2000); \n\n            }else{\n                \n                const socketNotificationData = data.newNotification;\n                \n\n                setPopDisplayed(true);\n\n                socket.current.emit(\"sendNotification\", { //put it bottom\n                    socketNotificationData        \n                });\n\n                navigate ('/');\n                window.location.reload(true); \n\n            }\n\n\n\n            // const newDisplay = data.newDisplay;\n            // const displayedDiary = data.displayedDiary;\n\n            // dispatch ({type: 'POST_DIARY', payload: newDisplay});\n            // dispatch ({type: 'DIARY_DISPLAY', payload: displayedDiary});\n            // setDisplayer(true);\n            // setTimeout( function() {setDisplayer (false)}, 2000); \n      \n\n        \n    } catch(error) {\n        console.log(error);\n    }\n}\nexport const patchDiariesAction = (id, diariesEditData, setpopPosted, setSpam) => async (dispatch)=>{\n    try{\n\n        //console.log('patchAction')\n        const {data} = await axs.patchDiariesApi(id, diariesEditData);\n        console.log(data);\n\n        if (data === 'Spam'){\n            setSpam (true);\n            setTimeout( function() {setSpam (false)}, 2000);\n\n        }else if (data === 'Success'){\n          \n            setpopPosted(true);\n            //setTimeout( function() {setpopOptions(false)}, 2000);\n            window.location = ('/') \n            \n        }\n    } catch(error){\n        console.log(error.message);\n        // console.log(diariesEditData);\n        // console.log(id);\n    }\n}\n\nexport const deleteDiariesAction = (id, setPopDeleted) => async (dispatch) =>{\n        try{\n            await axs.deleteDiariesApi(id);\n            \n            setPopDeleted(true);\n\n            setTimeout(function() { window.location = ('/')}, 3000 )\n            //dispatch({type: 'DELETE_DIARY', payload: id});\n\n        } catch(error){\n            console.log(error);\n        }\n}\n\n\nexport const tipDiariesAction = (id, tipperData, setpopSure, setpopTip) => async (dispatch)=>{\n    try{\n        const {data} = await axs.tipDiariesApi(id, tipperData);  \n       \n        dispatch ({type: 'TIP_DIARY', payload: data});\n        // if(dispatch)\n        // {\n        setpopSure(false);\n        setpopTip(false);\n        //}\n        \n    } catch(error){\n        console.log(error);\n     \n    }\n}\nexport const reviewDiariesAction = (id, reviewData, setreviewData) => async (dispatch)=>{\n    try{\n        const {data} = await axs.reviewDiariesApi(id, reviewData); \n        \n        dispatch ({type: 'REVIEW_DIARY', payload: data});\n\n        setreviewData({reviewer:'', reviewerId:'', body: ''});\n    } catch(error){\n        console.log(error);\n       \n    }\n}\n"]},"metadata":{},"sourceType":"module"}