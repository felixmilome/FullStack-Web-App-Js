{"ast":null,"code":"import * as axs from './axs';\nexport const changeDpAction = dp => async (dispatch, navigate) => {\n  try {\n    const {\n      data\n    } = await axs.changeDpApi(dp);\n    dispatch({\n      type: 'CHANGE_DP',\n      data\n    }); //navigate('/Portfolios');\n\n    window.location.reload(true);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const editProfileAction = (profileFormData, setVisibleErrorProfile, setVisibleSuccessProfile, setLoadingProfile) => async dispatch => {\n  console.log(profileFormData);\n\n  try {\n    const {\n      data\n    } = await axs.editProfileApi(profileFormData);\n    console.log(data);\n\n    if (data.message === 'UsernameTaken' || data.message === 'error') {\n      dispatch({\n        type: 'EDIT_PROFILE',\n        data\n      });\n      setVisibleErrorProfile(true);\n      setLoadingProfile(false);\n    } else if (data.message === 'editedProfile') {\n      console.log(data.message);\n      dispatch({\n        type: 'EDIT_PROFILE',\n        data\n      });\n      setVisibleSuccessProfile(true);\n      window.location.reload(true);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const editSecurityAction = (securityFormData, setVisibleErrorSecurity, setVisibleSuccessSecurity, setLoadingSecurity) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.editSecurityApi(securityFormData); //  dispatch ({type: 'EDIT_SECURITY', data});\n\n    if (data.message === 'error' || data.message === 'WrongPassword' || data.message === 'EmailTaken' || data.message === 'PasswordSame') {\n      dispatch({\n        type: 'EDIT_SECURITY',\n        data\n      });\n      setVisibleErrorSecurity(true);\n      setLoadingSecurity(false);\n    } else if (data.message === 'PasswordEdited' || data.message === 'EmailPasswordEdited' || data.message === 'EmailEdited') {\n      console.log(data.message);\n      dispatch({\n        type: 'EDIT_SECURITY',\n        data\n      });\n      setVisibleSuccessSecurity(true); //window.location.reload(true);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const forgotPasswordAction = (forgotPassFormData, setVisibleError, setVisibleSuccess, setLoading) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.forgotPasswordApi(forgotPassFormData);\n\n    if (data.message === 'error' || data.message === 'NoEmail' || data.message === 'PasswordSame') {\n      dispatch({\n        type: 'FORGOT_PASSWORD',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else if (data.message === 'Success') {\n      console.log(data.message);\n      dispatch({\n        type: 'FORGOT_PASSWORD',\n        data\n      });\n      setVisibleError(false);\n      setVisibleSuccess(true);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getMiniProfileAction = profileName => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.getMiniProfileApi(profileName);\n    dispatch({\n      type: 'GET_MINI_PROFILE',\n      data\n    });\n    console.log('miniprofile fetched');\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const searchMiniProfileAction = (searchedName, setSearchingName, setSearchError) => async dispatch => {\n  try {\n    var _data$userName;\n\n    const {\n      data\n    } = await axs.getMiniProfileApi(searchedName);\n    dispatch({\n      type: 'GET_MINI_PROFILE',\n      data\n    });\n    console.log('miniprofile fetched');\n\n    if (data = 'NO_USER') {\n      setSearchError(true);\n    } else if (((_data$userName = data.userName) === null || _data$userName === void 0 ? void 0 : _data$userName.length) > 0) {\n      setSearchError(false);\n    }\n\n    setSearchingName(false);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const followAction = (followData, setLoadingButtons, socket) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.followApi(followData);\n    const miniProfile = data.miniProfile;\n    dispatch({\n      type: 'FOLLOW',\n      data: miniProfile\n    });\n    console.log('followed');\n    console.log(data);\n    setLoadingButtons(false);\n    const socketNotificationData = data.newNotification;\n    socket.current.emit(\"sendNotification\", {\n      socketNotificationData\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const dailyPointsAction = id => async (dispatch, setpopDailyPoints) => {\n  try {\n    const {\n      data\n    } = await axs.dailyPointsApi(id);\n    dispatch({\n      type: 'DAILY_POINTS',\n      data\n    });\n    setpopDailyPoints(false);\n    window.location.reload(true);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const blockAction = (blockData, setBlockSurePop, setBlockError, setLoading, setLoadingButtons) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.blockApi(blockData);\n    console.log(data.message);\n    dispatch({\n      type: 'BLOCK',\n      data\n    });\n    setBlockSurePop(false);\n    setBlockError(true);\n    setTimeout(function () {\n      setBlockError(false);\n    }, 2000);\n    setLoading(false);\n\n    if (data.message === 'error') {\n      setLoadingButtons(false);\n    } //window.location.reload(true);\n\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const populateBlockAction = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.populateBlockApi();\n    console.log(data);\n    dispatch({\n      type: 'POPULATE_BLOCK',\n      data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const unblockAction = (unblockData, setLoadingUnblock, setBlockError) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.unblockApi(unblockData);\n    dispatch({\n      type: 'UNBLOCK',\n      data\n    });\n    console.log(data.message);\n    setBlockError(true);\n    setTimeout(function () {\n      setBlockError(false);\n    }, 2000);\n\n    if (data.message === 'error') {\n      setLoadingUnblock(false);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Midwares/rdx/actions/profileAction.js"],"names":["axs","changeDpAction","dp","dispatch","navigate","data","changeDpApi","type","window","location","reload","error","console","log","editProfileAction","profileFormData","setVisibleErrorProfile","setVisibleSuccessProfile","setLoadingProfile","editProfileApi","message","editSecurityAction","securityFormData","setVisibleErrorSecurity","setVisibleSuccessSecurity","setLoadingSecurity","editSecurityApi","forgotPasswordAction","forgotPassFormData","setVisibleError","setVisibleSuccess","setLoading","forgotPasswordApi","getMiniProfileAction","profileName","getMiniProfileApi","searchMiniProfileAction","searchedName","setSearchingName","setSearchError","userName","length","followAction","followData","setLoadingButtons","socket","followApi","miniProfile","socketNotificationData","newNotification","current","emit","dailyPointsAction","id","setpopDailyPoints","dailyPointsApi","blockAction","blockData","setBlockSurePop","setBlockError","blockApi","setTimeout","populateBlockAction","populateBlockApi","unblockAction","unblockData","setLoadingUnblock","unblockApi"],"mappings":"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","sourcesContent":["import * as axs from './axs';\n\nexport const changeDpAction = (dp) => async (dispatch, navigate) => {\n    try{\n        const {data} = await axs.changeDpApi(dp); \n        dispatch ({type: 'CHANGE_DP', data});\n     \n        //navigate('/Portfolios');\n        window.location.reload(true);\n    } catch(error) {\n        console.log(error);\n    }\n}\n\nexport const editProfileAction = (profileFormData, setVisibleErrorProfile, setVisibleSuccessProfile, setLoadingProfile) => async (dispatch) => {\n    console.log(profileFormData);\n    try{\n        const {data} = await axs.editProfileApi(profileFormData);\n        console.log(data); \n        \n        if (data.message === 'UsernameTaken' \n            || data.message === 'error'){\n\n            dispatch ({type: 'EDIT_PROFILE', data});\n            setVisibleErrorProfile(true); \n            setLoadingProfile(false); \n\n        } else if (data.message === 'editedProfile'){\n\n            console.log(data.message);  \n            dispatch({type: 'EDIT_PROFILE', data});        \n            setVisibleSuccessProfile(true);\n            window.location.reload(true);\n\n        } \n     \n    } catch(error) {\n        console.log(error);\n    }\n}\nexport const editSecurityAction = (securityFormData, setVisibleErrorSecurity, setVisibleSuccessSecurity, setLoadingSecurity) => async (dispatch) => {\n    try{\n        const {data} = await axs.editSecurityApi(securityFormData); \n      //  dispatch ({type: 'EDIT_SECURITY', data});\n     \n        if (data.message === 'error'\n        || data.message === 'WrongPassword'\n        || data.message === 'EmailTaken'\n        || data.message === 'PasswordSame' \n        ){\n            dispatch ({type: 'EDIT_SECURITY', data});\n             setVisibleErrorSecurity(true); \n            setLoadingSecurity(false);  \n        } else if (data.message === 'PasswordEdited'\n        ||data.message === 'EmailPasswordEdited'\n        || data.message === 'EmailEdited'){\n            console.log(data.message);  \n            dispatch({type: 'EDIT_SECURITY', data});        \n            setVisibleSuccessSecurity(true);\n            //window.location.reload(true);\n        }\n    } catch(error) {\n        console.log(error);\n    }\n}\nexport const forgotPasswordAction = (forgotPassFormData, setVisibleError, setVisibleSuccess, setLoading) => async (dispatch) => {\n    try{\n        const {data} = await axs.forgotPasswordApi(forgotPassFormData); \n       \n     \n        if (data.message === 'error'\n        || data.message === 'NoEmail'\n        || data.message === 'PasswordSame' \n        ){\n            dispatch ({type: 'FORGOT_PASSWORD', data});\n             setVisibleError(true); \n            setLoading(false); \n\n        } else if (data.message === 'Success'){\n\n            console.log(data.message);  \n            dispatch({type: 'FORGOT_PASSWORD', data});        \n            setVisibleError(false);\n            setVisibleSuccess(true);\n\n        }\n    } catch(error) {\n        console.log(error);\n    }\n}\n\nexport const getMiniProfileAction = (profileName) => async (dispatch) => {\n\n        try{\n            const {data} = await axs.getMiniProfileApi(profileName); \n            dispatch ({type: 'GET_MINI_PROFILE', data});\n            console.log('miniprofile fetched');\n            \n        \n        } catch(error) { \n            console.log(error);\n        }\n          \n}\nexport const searchMiniProfileAction = (searchedName, setSearchingName, setSearchError) => async (dispatch) => {\n\n    try{\n        const {data} = await axs.getMiniProfileApi(searchedName);\n       \n        dispatch ({type: 'GET_MINI_PROFILE', data});\n        console.log('miniprofile fetched');\n\n        if(data = 'NO_USER'){\n            setSearchError(true);\n        } else if(data.userName?.length > 0){\n            setSearchError(false);\n        }\n        setSearchingName(false);\n        \n    \n    } catch(error) { \n        console.log(error);\n    }\n      \n}\nexport const followAction = (followData, setLoadingButtons, socket) => async (dispatch) => {\n\n    try{\n        const {data} = await axs.followApi(followData);\n        const miniProfile= data.miniProfile;\n\n        dispatch ({type: 'FOLLOW', data:miniProfile}); \n        console.log('followed');\n        console.log(data); \n\n        setLoadingButtons(false);\n\n       const socketNotificationData = data.newNotification;\n        socket.current.emit(\"sendNotification\", {\n            socketNotificationData        \n        });\n    \n    } catch(error) { \n        console.log(error);\n    }\n      \n}\n\nexport const dailyPointsAction = (id) => async (dispatch, setpopDailyPoints) => {\n    try{\n        const {data} = await axs.dailyPointsApi(id); \n        dispatch ({type: 'DAILY_POINTS', data});\n        setpopDailyPoints(false);\n        window.location.reload(true);\n    } catch(error) {\n        console.log(error); \n    }\n}\nexport const blockAction = (blockData, setBlockSurePop, setBlockError,  setLoading, setLoadingButtons,) => async (dispatch) => {\n    try{\n        const {data} = await axs.blockApi(blockData); \n        console.log(data.message);\n        \n            dispatch ({type: 'BLOCK', data});\n            setBlockSurePop(false);\n            setBlockError(true);\n            setTimeout( function() {setBlockError(false)}, 2000);\n            setLoading(false);\n            if (data.message ==='error'){\n\n                setLoadingButtons(false);\n\n            }\n        //window.location.reload(true);\n    } catch(error) {\n        console.log(error);\n    }\n}\nexport const populateBlockAction = () => async (dispatch) => {\n    try{\n        const {data} = await axs.populateBlockApi(); \n        console.log(data);\n        \n            dispatch ({type: 'POPULATE_BLOCK', data});\n          \n    } catch(error) {\n        console.log(error);\n    }\n}\nexport const unblockAction = (unblockData, setLoadingUnblock, setBlockError) => async (dispatch) => {\n    try{\n        const {data} = await axs.unblockApi(unblockData);\n        dispatch ({type: 'UNBLOCK', data});\n        console.log(data.message);\n        setBlockError(true); \n        setTimeout( function() {setBlockError(false)}, 2000);\n\n        if(data.message==='error'){\n\n            setLoadingUnblock(false);\n\n        }\n        \n           \n          \n    } catch(error) {\n        console.log(error);\n    }\n}"]},"metadata":{},"sourceType":"module"}