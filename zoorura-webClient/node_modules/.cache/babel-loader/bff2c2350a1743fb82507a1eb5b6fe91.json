{"ast":null,"code":"var _jsxFileName = \"/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Body/ReviewTipRow.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { getTipsAction } from \"../Midwares/rdx/actions/tipsAction.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ReviewTipRow = ({\n  reviewId\n}) => {\n  _s();\n\n  const reviewTippersAll = useSelector(state => state.tipsReducer);\n  console.log(reviewTippersAll);\n  const availableReviewTippers = reviewTippersAll.filter(tipper => tipper.tippedPostId === reviewId);\n  console.log(availableReviewTippers);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!availableReviewTippers.length) {\n      dispatch(getTipsAction(reviewId));\n    }\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: availableReviewTippers.length > 0 && availableReviewTippers.map(reviewTipper => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex break-words p-1 border font-light border-gray-300 bg-transparent hover:bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [reviewTipper.tipperMiniProfile.userName, \": \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold\",\n        children: reviewTipper.amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\n\n_s(ReviewTipRow, \"bRuzqcgbacDtj3ZaYK0z6fMeGk0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ReviewTipRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewTipRow\");","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Body/ReviewTipRow.jsx"],"names":["useSelector","useDispatch","useEffect","useState","getTipsAction","ReviewTipRow","reviewId","reviewTippersAll","state","tipsReducer","console","log","availableReviewTippers","filter","tipper","tippedPostId","dispatch","length","map","reviewTipper","tipperMiniProfile","userName","amount"],"mappings":";;;AAAA,SAAQA,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAmC,OAAnC;AACA,SAAQC,aAAR,QAA4B,uCAA5B;;;AAGA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA;;AAEtC,QAAMC,gBAAgB,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,WAAlB,CAApC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,gBAAZ;AACA,QAAMK,sBAAsB,GAAGL,gBAAgB,CAACM,MAAjB,CAAwBC,MAAM,IAAIA,MAAM,CAACC,YAAP,KAAwBT,QAA1D,CAA/B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYC,sBAAZ;AACA,QAAMI,QAAQ,GAAGf,WAAW,EAA5B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAG,CAACU,sBAAsB,CAACK,MAA3B,EAAkC;AAE9BD,MAAAA,QAAQ,CAACZ,aAAa,CAACE,QAAD,CAAd,CAAR;AACH;AAEJ,GAPQ,EAON,CAACU,QAAD,CAPM,CAAT;AASA,sBACI;AAAA,cACKJ,sBAAsB,CAACK,MAAvB,GAAgC,CAAhC,IAAsCL,sBAAsB,CAACM,GAAvB,CAA4BC,YAAD,iBAC9D;AAAK,MAAA,SAAS,EAAE,sFAAhB;AAAA,8BACI;AAAA,mBAAIA,YAAY,CAACC,iBAAb,CAA+BC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,kBAA0BF,YAAY,CAACG;AAAvC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADmC;AAD3C,mBADJ;AAWH,CA5BM;;GAAMjB,Y;UAEgBL,W,EAIRC,W;;;KANRI,Y","sourcesContent":["import {useSelector, useDispatch} from 'react-redux';\nimport { useEffect, useState} from 'react';\nimport {getTipsAction} from \"../Midwares/rdx/actions/tipsAction.js\"\n\n\nexport const ReviewTipRow = ({reviewId})=>{\n\n    const reviewTippersAll = useSelector((state) => state.tipsReducer);\n    console.log(reviewTippersAll);\n    const availableReviewTippers = reviewTippersAll.filter(tipper => tipper.tippedPostId === reviewId);\n    console.log(availableReviewTippers);\n    const dispatch = useDispatch();\n\n    useEffect(() => {     \n        \n        if(!availableReviewTippers.length){\n            \n            dispatch(getTipsAction(reviewId));    \n        }\n\n    }, [dispatch]); \n\n    return(\n        <>\n            {availableReviewTippers.length > 0  && availableReviewTippers.map((reviewTipper) =>(\n                <div className= 'flex break-words p-1 border font-light border-gray-300 bg-transparent hover:bg-white'>\n                    <p>{reviewTipper.tipperMiniProfile.userName}: </p> \n                    <p className='font-bold'>{reviewTipper.amount}</p>      \n                </div>  \n                ))           \n            } \n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}