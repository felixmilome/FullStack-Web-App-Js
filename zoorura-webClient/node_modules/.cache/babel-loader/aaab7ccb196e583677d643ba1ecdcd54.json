{"ast":null,"code":"var _jsxFileName = \"/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Body/PostFrameReviews.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { getReviewsAction } from '../Midwares/rdx/actions/reviewsAction';\nimport moment from 'moment';\nimport { GiMoneyStack, GiTakeMyMoney } from \"react-icons/gi\";\nimport { BiCommentEdit } from \"react-icons/bi\";\nimport { MdSend, MdOutlineCancel } from \"react-icons/md\";\nimport { BeatLoader } from \"react-spinners\";\nimport { patchReviewsAction } from \"../Midwares/rdx/actions/reviewsAction.js\";\nimport { PostFrameRevRow } from \"./PostFrameRevRow.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PostFrameReviews = ({\n  diaryId,\n  diaryCreator,\n  userId\n}) => {\n  _s();\n\n  const reviewersAll = useSelector(state => state.reviewsReducer);\n  const dispatch = useDispatch();\n  const availableReviewers = reviewersAll.filter(reviewer => reviewer.reviewedPostId === diaryId);\n  useEffect(() => {\n    if (!availableReviewers.length) {\n      dispatch(getReviewsAction(diaryId));\n    }\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: availableReviewers.length > 0 && availableReviewers.map(reviewer => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ml-5 bg-gray-100 border-gray-300 rounded-md \",\n      children: [/*#__PURE__*/_jsxDEV(PostFrameRevRow, {\n        diaryId: diaryId,\n        diaryCreator: diaryCreator,\n        userId: userId,\n        reviewer: reviewer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: availableReviewers.map(reviewer => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-5 bg-gray-200 border-gray-300 rounded-md \",\n          children: /*#__PURE__*/_jsxDEV(PostFrameRevRow, {\n            diaryId: diaryId,\n            diaryCreator: diaryCreator,\n            userId: userId,\n            reviewer: reviewer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this)\n        }, reviewer._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this))\n      }, void 0, false)]\n    }, reviewer._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\n\n_s(PostFrameReviews, \"jibgKA41hTLT8QBXXrAWz2pys2Y=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PostFrameReviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostFrameReviews\");","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Body/PostFrameReviews.jsx"],"names":["useSelector","useDispatch","useEffect","useState","getReviewsAction","moment","GiMoneyStack","GiTakeMyMoney","BiCommentEdit","MdSend","MdOutlineCancel","BeatLoader","patchReviewsAction","PostFrameRevRow","PostFrameReviews","diaryId","diaryCreator","userId","reviewersAll","state","reviewsReducer","dispatch","availableReviewers","filter","reviewer","reviewedPostId","length","map","_id"],"mappings":";;;AAAA,SAAQA,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAmC,OAAnC;AACA,SAASC,gBAAT,QAAiC,uCAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAOC,YAAP,EAAqBC,aAArB,QAAyC,gBAAzC;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,MAAT,EAAgBC,eAAhB,QAAsC,gBAAtC;AACA,SAAQC,UAAR,QAAyB,gBAAzB;AACA,SAAQC,kBAAR,QAAiC,0CAAjC;AACA,SAAOC,eAAP,QAA6B,uBAA7B;;;AAGA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,YAAV;AAAwBC,EAAAA;AAAxB,CAAD,KAAqC;AAAA;;AAIjE,QAAMC,YAAY,GAAGlB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACC,cAAlB,CAAhC;AAEA,QAAMC,QAAQ,GAAGpB,WAAW,EAA5B;AAEA,QAAMqB,kBAAkB,GAAGJ,YAAY,CAACK,MAAb,CAAoBC,QAAQ,IAAIA,QAAQ,CAACC,cAAT,KAA4BV,OAA5D,CAA3B;AAGAb,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAG,CAACoB,kBAAkB,CAACI,MAAvB,EAA8B;AAE1BL,MAAAA,QAAQ,CAACjB,gBAAgB,CAACW,OAAD,CAAjB,CAAR;AACH;AAEJ,GAPQ,EAON,CAACM,QAAD,CAPM,CAAT;AAUA,sBAEI;AAAA,cACKC,kBAAkB,CAACI,MAAnB,GAA4B,CAA5B,IAAkCJ,kBAAkB,CAACK,GAAnB,CAAwBH,QAAD,iBAEtD;AAAyB,MAAA,SAAS,EAAC,8CAAnC;AAAA,8BAEK,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAET,OAA1B;AAAmC,QAAA,YAAY,EAAEC,YAAjD;AAA+D,QAAA,MAAM,EAAGC,MAAxE;AAAgF,QAAA,QAAQ,EAAGO;AAA3F;AAAA;AAAA;AAAA;AAAA,cAFL,eAII;AAAA,kBACKF,kBAAkB,CAACK,GAAnB,CAAwBH,QAAD,iBACpB;AAAyB,UAAA,SAAS,EAAC,8CAAnC;AAAA,iCACI,QAAC,eAAD;AAAiB,YAAA,OAAO,EAAET,OAA1B;AAAmC,YAAA,YAAY,EAAEC,YAAjD;AAA+D,YAAA,MAAM,EAAGC,MAAxE;AAAgF,YAAA,QAAQ,EAAGO;AAA3F;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUA,QAAQ,CAACI,GAAnB;AAAA;AAAA;AAAA;AAAA,gBADH;AADL,uBAJJ;AAAA,OAAUJ,QAAQ,CAACI,GAAnB;AAAA;AAAA;AAAA;AAAA,YAF+B;AADvC,mBAFJ;AAwBH,CA7CM;;GAAMd,gB;UAIYd,W,EAEJC,W;;;KANRa,gB","sourcesContent":["import {useSelector, useDispatch} from 'react-redux';\nimport { useEffect, useState} from 'react';\nimport { getReviewsAction } from '../Midwares/rdx/actions/reviewsAction';\nimport moment from 'moment'; \nimport{GiMoneyStack, GiTakeMyMoney} from \"react-icons/gi\"; \nimport { BiCommentEdit } from \"react-icons/bi\";\nimport { MdSend,MdOutlineCancel} from \"react-icons/md\";\nimport {BeatLoader} from \"react-spinners\";\nimport {patchReviewsAction} from \"../Midwares/rdx/actions/reviewsAction.js\"\nimport{PostFrameRevRow} from \"./PostFrameRevRow.jsx\"\n\n\nexport const PostFrameReviews = ({diaryId, diaryCreator, userId}) => {\n\n       \n\n    const reviewersAll = useSelector((state) => state.reviewsReducer);\n   \n    const dispatch = useDispatch(); \n\n    const availableReviewers = reviewersAll.filter(reviewer => reviewer.reviewedPostId === diaryId);\n    \n   \n    useEffect(() => {     \n       \n        if(!availableReviewers.length){\n            \n            dispatch(getReviewsAction(diaryId));    \n        }\n\n    }, [dispatch]); \n\n\n    return (\n     \n        <>\n            {availableReviewers.length > 0  && availableReviewers.map((reviewer) =>(\n            \n                <div key={reviewer._id}  className='ml-5 bg-gray-100 border-gray-300 rounded-md '>\n            \n                     <PostFrameRevRow diaryId={diaryId} diaryCreator={diaryCreator} userId= {userId} reviewer= {reviewer}/>\n                    \n                    <>  \n                        {availableReviewers.map((reviewer) =>(\n                            <div key={reviewer._id}  className='ml-5 bg-gray-200 border-gray-300 rounded-md '>            \n                                <PostFrameRevRow diaryId={diaryId} diaryCreator={diaryCreator} userId= {userId} reviewer= {reviewer}/>\n                            </div>\n                            ))\n                        }\n                    </>\n                \n                 </div>\n            ))\n            \n        }                       \n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}