{"ast":null,"code":"import * as axs from './axs'; //search FOLLOWS\n// export const getUserDataAction = (id) => async (dispatch) => {\n//     try{\n//         const {data} = await axs.getUserDataApi(id); \n//         dispatch ({type: 'USER_DATA', data});\n//     } catch(error) {\n//         console.log(error); \n//     }\n// }\n\nexport const getUsersAction = user => async dispatch => {\n  try {\n    console.log(user);\n    const {\n      data\n    } = await axs.getUsersApi(user);\n    const {\n      users,\n      message\n    } = data;\n    console.log(data);\n\n    if (message === 'ChatHunt') {\n      dispatch({\n        type: 'CHAT_HUNT',\n        data: users\n      });\n    } else if (message === 'Followers') {\n      dispatch({\n        type: 'FOLLOWERS',\n        data: users\n      });\n    } else if (message === 'Following') {\n      dispatch({\n        type: 'FOLLOWING',\n        data: users\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const changeDpAction = dp => async (dispatch, navigate) => {\n  try {\n    const {\n      data\n    } = await axs.changeDpApi(dp);\n    dispatch({\n      type: 'CHANGE_DP',\n      data\n    }); //navigate('/Portfolios');\n\n    window.location.reload(true);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const editProfileAction = (profileFormData, setVisibleErrorProfile, setVisibleSuccessProfile, setLoadingProfile) => async dispatch => {\n  console.log(profileFormData);\n\n  try {\n    const {\n      data\n    } = await axs.editProfileApi(profileFormData);\n    console.log(data);\n\n    if (data.message === 'UsernameTaken' || data.message === 'error') {\n      dispatch({\n        type: 'EDIT_PROFILE',\n        data\n      });\n      setVisibleErrorProfile(true);\n      setLoadingProfile(false);\n    } else if (data.message === 'editedProfile') {\n      console.log(data.message);\n      dispatch({\n        type: 'EDIT_PROFILE',\n        data\n      });\n      setVisibleSuccessProfile(true);\n      window.location.reload(true);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const editSecurityAction = (securityFormData, setVisibleErrorSecurity, setVisibleSuccessSecurity, setLoadingSecurity) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.editSecurityApi(securityFormData); //  dispatch ({type: 'EDIT_SECURITY', data});\n\n    if (data.message === 'error' || data.message === 'WrongPassword' || data.message === 'EmailTaken' || data.message === 'PasswordSame') {\n      dispatch({\n        type: 'EDIT_SECURITY',\n        data\n      });\n      setVisibleErrorSecurity(true);\n      setLoadingSecurity(false);\n    } else if (data.message === 'PasswordEdited' || data.message === 'EmailPasswordEdited' || data.message === 'EmailEdited') {\n      console.log(data.message);\n      dispatch({\n        type: 'EDIT_SECURITY',\n        data\n      });\n      setVisibleSuccessSecurity(true); //window.location.reload(true);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const forgotPasswordAction = (forgotPassFormData, setVisibleError, setVisibleSuccess, setLoading) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.forgotPasswordApi(forgotPassFormData);\n\n    if (data.message === 'error' || data.message === 'NoEmail' || data.message === 'PasswordSame') {\n      dispatch({\n        type: 'FORGOT_PASSWORD',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else if (data.message === 'Success') {\n      console.log(data.message);\n      dispatch({\n        type: 'FORGOT_PASSWORD',\n        data\n      });\n      setVisibleError(false);\n      setVisibleSuccess(true);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getMiniProfileAction = profileName => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.getMiniProfileApi(profileName);\n    dispatch({\n      type: 'GET_MINI_PROFILE',\n      data\n    });\n    console.log('miniprofile fetched');\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getUserProfileAction = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.getUserProfileApi();\n    console.log(data);\n    const follows = data.follows;\n    dispatch({\n      type: 'REGISTER_FOLLOWS',\n      data: follows\n    });\n    console.log('user profile fetched');\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const searchMiniProfileAction = (searchedName, setSearchingName, setSearchError) => async dispatch => {\n  try {\n    var _data$userName;\n\n    const {\n      data\n    } = await axs.getMiniProfileApi(searchedName);\n    dispatch({\n      type: 'GET_MINI_PROFILE',\n      data\n    });\n    console.log('miniprofile fetched');\n\n    if (data === 'NO_USER') {\n      setSearchError(true);\n    } else if (((_data$userName = data.userName) === null || _data$userName === void 0 ? void 0 : _data$userName.length) > 0) {\n      setSearchError(false);\n    }\n\n    setSearchingName(false);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const followAction = (followData, setLoadingButtons, socket, setFollowSpam) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.followApi(followData);\n\n    if (data === 'Spam') {\n      setFollowSpam(true);\n      setTimeout(function () {\n        setFollowSpam(false);\n      }, 3000);\n      setLoadingButtons(false);\n    } else {\n      const miniProfile = data.miniProfile;\n      const miniProfileId = data.miniProfile._id;\n      dispatch({\n        type: 'FOLLOW',\n        data: miniProfile\n      });\n      dispatch({\n        type: 'FOLLOW_REDUCER',\n        data: miniProfileId\n      }); //actual follow reducer\n\n      console.log('followed');\n      console.log(data);\n      setLoadingButtons(false); // const socketNotificationData = data.newNotification;\n      //     socket.current.emit(\"sendNotification\", {\n      //         socketNotificationData        \n      //     });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const quickFollowAction = (followData, setLoadingFollow) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.followApi(followData);\n\n    if (data === 'Spam') {\n      return;\n    } else {\n      const miniProfile = data.miniProfile;\n      const miniProfileId = data.miniProfile._id;\n      dispatch({\n        type: 'FOLLOW_REDUCER',\n        data: miniProfileId\n      }); //actual follow reducer\n\n      console.log('follow Reducer');\n      console.log(data);\n      setLoadingFollow(false); // const socketNotificationData = data.newNotification;\n      //     socket.current.emit(\"sendNotification\", {\n      //         socketNotificationData        \n      //     });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const dailyPointsAction = id => async (dispatch, setpopDailyPoints) => {\n  try {\n    const {\n      data\n    } = await axs.dailyPointsApi(id);\n    dispatch({\n      type: 'DAILY_POINTS',\n      data\n    });\n    setpopDailyPoints(false);\n    window.location.reload(true);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const blockAction = (blockData, setBlockSurePop, setBlockError, setLoading, setLoadingButtons) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.blockApi(blockData);\n    console.log(data.message);\n    dispatch({\n      type: 'BLOCK',\n      data\n    });\n    setBlockSurePop(false);\n    setBlockError(true);\n    setTimeout(function () {\n      setBlockError(false);\n    }, 2000);\n    setLoading(false);\n\n    if (data.message === 'error') {\n      setLoadingButtons(false);\n    } //window.location.reload(true);\n\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const populateBlockAction = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.populateBlockApi();\n    console.log(data);\n    dispatch({\n      type: 'POPULATE_BLOCK',\n      data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const unblockAction = (unblockData, setLoadingUnblock, setBlockError) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.unblockApi(unblockData);\n    dispatch({\n      type: 'UNBLOCK',\n      data\n    });\n    console.log(data.message);\n    setBlockError(true);\n    setTimeout(function () {\n      setBlockError(false);\n    }, 2000);\n\n    if (data.message === 'error') {\n      setLoadingUnblock(false);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Midwares/rdx/actions/profileAction.js"],"names":["axs","getUsersAction","user","dispatch","console","log","data","getUsersApi","users","message","type","error","changeDpAction","dp","navigate","changeDpApi","window","location","reload","editProfileAction","profileFormData","setVisibleErrorProfile","setVisibleSuccessProfile","setLoadingProfile","editProfileApi","editSecurityAction","securityFormData","setVisibleErrorSecurity","setVisibleSuccessSecurity","setLoadingSecurity","editSecurityApi","forgotPasswordAction","forgotPassFormData","setVisibleError","setVisibleSuccess","setLoading","forgotPasswordApi","getMiniProfileAction","profileName","getMiniProfileApi","getUserProfileAction","getUserProfileApi","follows","searchMiniProfileAction","searchedName","setSearchingName","setSearchError","userName","length","followAction","followData","setLoadingButtons","socket","setFollowSpam","followApi","setTimeout","miniProfile","miniProfileId","_id","quickFollowAction","setLoadingFollow","dailyPointsAction","id","setpopDailyPoints","dailyPointsApi","blockAction","blockData","setBlockSurePop","setBlockError","blockApi","populateBlockAction","populateBlockApi","unblockAction","unblockData","setLoadingUnblock","unblockApi"],"mappings":"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","sourcesContent":["import * as axs from './axs';\n//search FOLLOWS\n\n// export const getUserDataAction = (id) => async (dispatch) => {\n//     try{\n\n//         const {data} = await axs.getUserDataApi(id); \n//         dispatch ({type: 'USER_DATA', data});\n   \n\n//     } catch(error) {\n//         console.log(error); \n//     }\n// }\n\nexport const getUsersAction = (user) => async (dispatch) => {\n    try{\n        console.log(user)\n        const {data} = await axs.getUsersApi(user);\n        const {users, message} = data;\n        console.log(data);\n      \n\n        if (message === 'ChatHunt'){ \n\n             dispatch ({type: 'CHAT_HUNT', data:users}); \n\n        } else if (message === 'Followers'){ \n\n            dispatch ({type: 'FOLLOWERS', data:users});\n\n       }else if (message === 'Following'){ \n\n        dispatch ({type: 'FOLLOWING', data:users});\n\n   }\n   \n\n    } catch(error) {\n        console.log(error); \n    }\n}\n\nexport const changeDpAction = (dp) => async (dispatch, navigate) => {\n    try{\n        const {data} = await axs.changeDpApi(dp); \n        dispatch ({type: 'CHANGE_DP', data});\n     \n        //navigate('/Portfolios');\n        window.location.reload(true);\n    } catch(error) {\n        console.log(error);\n    }\n}\n\nexport const editProfileAction = (profileFormData, setVisibleErrorProfile, setVisibleSuccessProfile, setLoadingProfile) => async (dispatch) => {\n    console.log(profileFormData);\n    try{\n        const {data} = await axs.editProfileApi(profileFormData);\n        console.log(data); \n        \n        if (data.message === 'UsernameTaken' \n            || data.message === 'error'){\n\n            dispatch ({type: 'EDIT_PROFILE', data});\n            setVisibleErrorProfile(true); \n            setLoadingProfile(false); \n\n        } else if (data.message === 'editedProfile'){\n\n            console.log(data.message);  \n            dispatch({type: 'EDIT_PROFILE', data});        \n            setVisibleSuccessProfile(true);\n            window.location.reload(true);\n\n        } \n     \n    } catch(error) {\n        console.log(error);\n    }\n}\nexport const editSecurityAction = (securityFormData, setVisibleErrorSecurity, setVisibleSuccessSecurity, setLoadingSecurity) => async (dispatch) => {\n    try{\n        const {data} = await axs.editSecurityApi(securityFormData); \n      //  dispatch ({type: 'EDIT_SECURITY', data});\n     \n        if (data.message === 'error'\n        || data.message === 'WrongPassword'\n        || data.message === 'EmailTaken'\n        || data.message === 'PasswordSame' \n        ){\n            dispatch ({type: 'EDIT_SECURITY', data});\n             setVisibleErrorSecurity(true); \n            setLoadingSecurity(false);  \n        } else if (data.message === 'PasswordEdited'\n        ||data.message === 'EmailPasswordEdited'\n        || data.message === 'EmailEdited'){\n            console.log(data.message);  \n            dispatch({type: 'EDIT_SECURITY', data});        \n            setVisibleSuccessSecurity(true);\n            //window.location.reload(true);\n        }\n    } catch(error) {\n        console.log(error);\n    }\n}\nexport const forgotPasswordAction = (forgotPassFormData, setVisibleError, setVisibleSuccess, setLoading) => async (dispatch) => {\n    try{\n        const {data} = await axs.forgotPasswordApi(forgotPassFormData); \n       \n     \n        if (data.message === 'error'\n        || data.message === 'NoEmail'\n        || data.message === 'PasswordSame' \n        ){\n            dispatch ({type: 'FORGOT_PASSWORD', data});\n             setVisibleError(true); \n            setLoading(false); \n\n        } else if (data.message === 'Success'){\n\n            console.log(data.message);  \n            dispatch({type: 'FORGOT_PASSWORD', data});        \n            setVisibleError(false);\n            setVisibleSuccess(true);\n\n        }\n    } catch(error) {\n        console.log(error);\n    }\n}\n\nexport const getMiniProfileAction = (profileName) => async (dispatch) => {\n\n        try{\n            const {data} = await axs.getMiniProfileApi(profileName); \n            dispatch ({type: 'GET_MINI_PROFILE', data});\n            console.log('miniprofile fetched');\n            \n        \n        } catch(error) { \n            console.log(error);\n        }\n          \n}\nexport const getUserProfileAction = () => async (dispatch) => {\n\n    try{\n        const {data} = await axs.getUserProfileApi();\n        console.log(data);\n        const follows = data.follows;\n        dispatch ({type: 'REGISTER_FOLLOWS', data:follows});\n        console.log('user profile fetched');\n        \n    \n    } catch(error) { \n\n        console.log(error);\n\n    }\n      \n}\nexport const searchMiniProfileAction = (searchedName, setSearchingName, setSearchError) => async (dispatch) => {\n\n    try{\n        const {data} = await axs.getMiniProfileApi(searchedName);\n       \n        dispatch ({type: 'GET_MINI_PROFILE', data});\n        console.log('miniprofile fetched');\n\n        if(data === 'NO_USER'){\n            setSearchError(true);\n        } else if(data.userName?.length > 0){\n            setSearchError(false);\n        }\n        setSearchingName(false);\n        \n    \n    } catch(error) { \n        console.log(error);\n    }\n      \n}\nexport const followAction = (followData, setLoadingButtons, socket, setFollowSpam) => async (dispatch) => {\n\n    try{\n        const {data} = await axs.followApi(followData);\n        if(data==='Spam'){\n            setFollowSpam(true);\n            setTimeout( function() {setFollowSpam(false)}, 3000);\n            setLoadingButtons(false);\n        }else{\n            const miniProfile= data.miniProfile;\n            const miniProfileId = data.miniProfile._id;\n\n            dispatch ({type: 'FOLLOW', data:miniProfile}); \n\n            dispatch ({type: 'FOLLOW_REDUCER', data:miniProfileId}); //actual follow reducer\n            console.log('followed');\n            console.log(data); \n\n            setLoadingButtons(false);\n\n        // const socketNotificationData = data.newNotification;\n        //     socket.current.emit(\"sendNotification\", {\n        //         socketNotificationData        \n        //     });\n        }\n    \n    } catch(error) { \n        console.log(error);\n    }\n      \n}\nexport const quickFollowAction = (followData, setLoadingFollow) => async (dispatch) => {\n\n    try{\n        const {data} = await axs.followApi(followData);\n\n        if(data==='Spam'){\n          \n            return;\n\n        }else{\n            const miniProfile= data.miniProfile;\n            const miniProfileId = data.miniProfile._id;\n\n            dispatch ({type: 'FOLLOW_REDUCER', data:miniProfileId}); //actual follow reducer\n            console.log('follow Reducer');\n            console.log(data); \n\n           setLoadingFollow(false);\n\n        // const socketNotificationData = data.newNotification;\n        //     socket.current.emit(\"sendNotification\", {\n        //         socketNotificationData        \n        //     });\n        }\n    \n    } catch(error) { \n        console.log(error);\n    }\n      \n}\n\nexport const dailyPointsAction = (id) => async (dispatch, setpopDailyPoints) => {\n    try{\n        const {data} = await axs.dailyPointsApi(id); \n        dispatch ({type: 'DAILY_POINTS', data});\n        setpopDailyPoints(false);\n        window.location.reload(true);\n    } catch(error) {\n        console.log(error); \n    }\n}\nexport const blockAction = (blockData, setBlockSurePop, setBlockError,  setLoading, setLoadingButtons,) => async (dispatch) => {\n    try{\n        const {data} = await axs.blockApi(blockData); \n        console.log(data.message);\n        \n            dispatch ({type: 'BLOCK', data});\n            setBlockSurePop(false);\n            setBlockError(true);\n            setTimeout( function() {setBlockError(false)}, 2000);\n            setLoading(false);\n            if (data.message ==='error'){\n\n                setLoadingButtons(false);\n\n            }\n        //window.location.reload(true);\n    } catch(error) {\n        console.log(error);\n    }\n}\nexport const populateBlockAction = () => async (dispatch) => {\n    try{\n        const {data} = await axs.populateBlockApi(); \n        console.log(data);\n        \n            dispatch ({type: 'POPULATE_BLOCK', data});\n          \n    } catch(error) {\n        console.log(error);\n    }\n}\nexport const unblockAction = (unblockData, setLoadingUnblock, setBlockError) => async (dispatch) => {\n    try{\n        const {data} = await axs.unblockApi(unblockData);\n        dispatch ({type: 'UNBLOCK', data});\n        console.log(data.message);\n        setBlockError(true); \n        setTimeout( function() {setBlockError(false)}, 2000);\n\n        if(data.message==='error'){\n\n            setLoadingUnblock(false);\n\n        }\n        \n           \n          \n    } catch(error) {\n        console.log(error);\n    }\n}"]},"metadata":{},"sourceType":"module"}