{"ast":null,"code":"export const notificationsReducer = (notifications = [], action) => {\n  switch (action.type) {\n    case 'POST_NOTIFICATIONS':\n      return notifications;\n\n    case 'GET_NOTIFICATIONS':\n      return action.payload;\n\n    case 'TIP_DISPLAY':\n      return notifications.map(notification => notification._id === action.payload._id ? action.payload : notification);\n\n    case 'READ_NOTIFICATIONS':\n      //const remaining = notifications.filter((notification)=> notification._id !== action.payload._id);\n      const markedRead = notifications.map(notification => notification._id === action.payload._id ? action.payload : notification); //return [...notifications, action.payload];\n\n      console.log(markedRead); //return remaining.concat(action.payload); \n\n      return markedRead;\n\n    case 'READ_CONVO_NOTIFICATIONS':\n      const remaining = notifications.filter(notification => notification.postId !== action.payload);\n      console.log(remaining);\n      return remaining;\n\n    case 'SOCKET_GOT_NOTIFICATION':\n      return [...notifications, action.payload];\n\n    default:\n      return notifications;\n  }\n};","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Midwares/rdx/reducers/notificationsReducer.js"],"names":["notificationsReducer","notifications","action","type","payload","map","notification","_id","markedRead","console","log","remaining","filter","postId"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAG,CAACC,aAAa,GAAG,EAAjB,EAAqBC,MAArB,KAAgC;AAEhE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,oBAAL;AACI,aAAOF,aAAP;;AACJ,SAAK,mBAAL;AACI,aAAOC,MAAM,CAACE,OAAd;;AACJ,SAAK,aAAL;AACI,aAAOH,aAAa,CAACI,GAAd,CAAmBC,YAAD,IAAkBA,YAAY,CAACC,GAAb,KAAqBL,MAAM,CAACE,OAAP,CAAeG,GAApC,GAA0CL,MAAM,CAACE,OAAjD,GAA2DE,YAA/F,CAAP;;AACJ,SAAK,oBAAL;AAEG;AACC,YAAME,UAAU,GAAGP,aAAa,CAACI,GAAd,CAAmBC,YAAD,IAAkBA,YAAY,CAACC,GAAb,KAAqBL,MAAM,CAACE,OAAP,CAAeG,GAApC,GAA0CL,MAAM,CAACE,OAAjD,GAA2DE,YAA/F,CAAnB,CAHJ,CAII;;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ,EALJ,CAMI;;AACA,aAAOA,UAAP;;AAEJ,SAAK,0BAAL;AAEI,YAAMG,SAAS,GAAGV,aAAa,CAACW,MAAd,CAAsBN,YAAD,IAAiBA,YAAY,CAACO,MAAb,KAAwBX,MAAM,CAACE,OAArE,CAAlB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACA,aAAOA,SAAP;;AAEJ,SAAK,yBAAL;AACI,aAAO,CAAC,GAAGV,aAAJ,EAAmBC,MAAM,CAACE,OAA1B,CAAP;;AACJ;AACI,aAAOH,aAAP;AAzBR;AA4BF,CA9BK","sourcesContent":["export const notificationsReducer = (notifications = [], action) => {\n     \n    switch(action.type) {\n        case 'POST_NOTIFICATIONS': \n            return notifications;\n        case 'GET_NOTIFICATIONS': \n            return action.payload;\n        case 'TIP_DISPLAY':\n            return notifications.map((notification) => notification._id === action.payload._id ? action.payload : notification);\n        case 'READ_NOTIFICATIONS': \n\n           //const remaining = notifications.filter((notification)=> notification._id !== action.payload._id);\n            const markedRead = notifications.map((notification) => notification._id === action.payload._id ? action.payload : notification);\n            //return [...notifications, action.payload];\n            console.log(markedRead);\n            //return remaining.concat(action.payload); \n            return markedRead;\n       \n        case 'READ_CONVO_NOTIFICATIONS': \n\n            const remaining = notifications.filter((notification)=> notification.postId !== action.payload);\n            console.log(remaining);\n            return remaining;\n   \n        case 'SOCKET_GOT_NOTIFICATION':     \n            return [...notifications, action.payload];\n        default:\n            return notifications; \n     }\n     \n }\n\n"]},"metadata":{},"sourceType":"module"}