{"ast":null,"code":"let duration = 0;\nlet ratio = 0;\n\nconst ts2sec = ts => {\n  const [h, m, s] = ts.split(':');\n  return parseFloat(h) * 60 * 60 + parseFloat(m) * 60 + parseFloat(s);\n};\n\nmodule.exports = (message, progress) => {\n  if (typeof message === 'string') {\n    if (message.startsWith('  Duration')) {\n      const ts = message.split(', ')[0].split(': ')[1];\n      const d = ts2sec(ts);\n      progress({\n        duration: d,\n        ratio\n      });\n\n      if (duration === 0 || duration > d) {\n        duration = d;\n      }\n    } else if (message.startsWith('frame') || message.startsWith('size')) {\n      const ts = message.split('time=')[1].split(' ')[0];\n      const t = ts2sec(ts);\n      ratio = t / duration;\n      progress({\n        ratio,\n        time: t\n      });\n    } else if (message.startsWith('video:')) {\n      progress({\n        ratio: 1\n      });\n      duration = 0;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/node_modules/@ffmpeg/ffmpeg/src/utils/parseProgress.js"],"names":["duration","ratio","ts2sec","ts","h","m","s","split","parseFloat","module","exports","message","progress","startsWith","d","t","time"],"mappings":"AAAA,IAAIA,QAAQ,GAAG,CAAf;AACA,IAAIC,KAAK,GAAG,CAAZ;;AAEA,MAAMC,MAAM,GAAIC,EAAD,IAAQ;AACrB,QAAM,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYH,EAAE,CAACI,KAAH,CAAS,GAAT,CAAlB;AACA,SAAQC,UAAU,CAACJ,CAAD,CAAV,GAAgB,EAAhB,GAAqB,EAAtB,GAA6BI,UAAU,CAACH,CAAD,CAAV,GAAgB,EAA7C,GAAmDG,UAAU,CAACF,CAAD,CAApE;AACD,CAHD;;AAKAG,MAAM,CAACC,OAAP,GAAiB,CAACC,OAAD,EAAUC,QAAV,KAAuB;AACtC,MAAI,OAAOD,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,QAAIA,OAAO,CAACE,UAAR,CAAmB,YAAnB,CAAJ,EAAsC;AACpC,YAAMV,EAAE,GAAGQ,OAAO,CAACJ,KAAR,CAAc,IAAd,EAAoB,CAApB,EAAuBA,KAAvB,CAA6B,IAA7B,EAAmC,CAAnC,CAAX;AACA,YAAMO,CAAC,GAAGZ,MAAM,CAACC,EAAD,CAAhB;AACAS,MAAAA,QAAQ,CAAC;AAAEZ,QAAAA,QAAQ,EAAEc,CAAZ;AAAeb,QAAAA;AAAf,OAAD,CAAR;;AACA,UAAID,QAAQ,KAAK,CAAb,IAAkBA,QAAQ,GAAGc,CAAjC,EAAoC;AAClCd,QAAAA,QAAQ,GAAGc,CAAX;AACD;AACF,KAPD,MAOO,IAAIH,OAAO,CAACE,UAAR,CAAmB,OAAnB,KAA+BF,OAAO,CAACE,UAAR,CAAmB,MAAnB,CAAnC,EAA+D;AACpE,YAAMV,EAAE,GAAGQ,OAAO,CAACJ,KAAR,CAAc,OAAd,EAAuB,CAAvB,EAA0BA,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAX;AACA,YAAMQ,CAAC,GAAGb,MAAM,CAACC,EAAD,CAAhB;AACAF,MAAAA,KAAK,GAAGc,CAAC,GAAGf,QAAZ;AACAY,MAAAA,QAAQ,CAAC;AAAEX,QAAAA,KAAF;AAASe,QAAAA,IAAI,EAAED;AAAf,OAAD,CAAR;AACD,KALM,MAKA,IAAIJ,OAAO,CAACE,UAAR,CAAmB,QAAnB,CAAJ,EAAkC;AACvCD,MAAAA,QAAQ,CAAC;AAAEX,QAAAA,KAAK,EAAE;AAAT,OAAD,CAAR;AACAD,MAAAA,QAAQ,GAAG,CAAX;AACD;AACF;AACF,CAnBD","sourcesContent":["let duration = 0;\nlet ratio = 0;\n\nconst ts2sec = (ts) => {\n  const [h, m, s] = ts.split(':');\n  return (parseFloat(h) * 60 * 60) + (parseFloat(m) * 60) + parseFloat(s);\n};\n\nmodule.exports = (message, progress) => {\n  if (typeof message === 'string') {\n    if (message.startsWith('  Duration')) {\n      const ts = message.split(', ')[0].split(': ')[1];\n      const d = ts2sec(ts);\n      progress({ duration: d, ratio });\n      if (duration === 0 || duration > d) {\n        duration = d;\n      }\n    } else if (message.startsWith('frame') || message.startsWith('size')) {\n      const ts = message.split('time=')[1].split(' ')[0];\n      const t = ts2sec(ts);\n      ratio = t / duration;\n      progress({ ratio, time: t });\n    } else if (message.startsWith('video:')) {\n      progress({ ratio: 1 });\n      duration = 0;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"script"}