{"ast":null,"code":"import * as axs from './axs';\nexport const registerAction = (formData, navigate, setVisibleError, setVisibleSuccess, setLoading) => async dispatch => {\n  setLoading(true);\n\n  try {\n    const {\n      data\n    } = await axs.registerApi(formData);\n\n    if (data.message === 'UsernameTaken') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else if (data.message === 'EmailTaken') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else if (data.message === 'UsernameEmailTaken') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else if (data.message === 'InputError') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else if (data.message === 'RegistrySuccess') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n      window.location.reload();\n    } else {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleSuccess(true);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const loginAction = (formData, navigate, setVisibleError, setLoading) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.loginApi(formData);\n    console.log(data.message);\n\n    if (data.message === 'LoginError') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else if (data.message === 'RegistrySuccess') {\n      // console.log('RegLogin');\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n      window.location.reload();\n    } else {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true); //shares ui with success\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const verifyAction = (formData, navigate, setVisibleError, setLoading) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.verifyApi(formData); //shares reducer with auth\n\n    console.log(data.message);\n\n    if (data.message === 'AlreadyVerified') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else if (data.message === 'OtpError') {\n      console.log(data.message);\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else if (data.message === 'NoUser') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setLoading(false);\n      setVisibleError(true); //shares ui with success conditions set in UI\n    } else if (data.message === 'ChangeOtpExpired') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else if (data.message === 'RegisterOtpExpired') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else if (data.message === 'UnknownError') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n      setLoading(false);\n    } else if (data.message === 'RegistrySuccess') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setLoading(false);\n      setVisibleError(true); //shares ui with success conditions set in UI\n\n      window.location.reload();\n    } else if (data.message === 'SecuritySuccess') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setLoading(false);\n      setVisibleError(true); //shares ui with success conditions set in UI\n    } else if (data.message === 'DeleteSuccess') {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setLoading(false);\n      setVisibleError(true); //shares ui with success conditions set in UI\n    } else {\n      dispatch({\n        type: 'GOOGLE_SIGNUP',\n        data\n      });\n      setVisibleError(true);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Midwares/rdx/actions/auth.js"],"names":["axs","registerAction","formData","navigate","setVisibleError","setVisibleSuccess","setLoading","dispatch","data","registerApi","message","type","window","location","reload","error","console","log","loginAction","loginApi","verifyAction","verifyApi"],"mappings":"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","sourcesContent":["import * as axs from './axs';\n\n\nexport const registerAction = (formData, navigate, setVisibleError,setVisibleSuccess,setLoading) => async (dispatch) => {\n    setLoading(true);\n    try{\n        const {data} = await axs.registerApi(formData);\n        if (data.message === 'UsernameTaken'){\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n             setVisibleError(true); \n            setLoading(false);  \n        }else if (data.message === 'EmailTaken'){\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n             setVisibleError(true); \n            setLoading(false);  \n        }else if (data.message === 'UsernameEmailTaken'){\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n             setVisibleError(true); \n            setLoading(false);  \n        }else if (data.message === 'InputError'){\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n             setVisibleError(true); \n            setLoading(false);  \n        }else if (data.message === 'RegistrySuccess'){\n           \n            \n            dispatch({type: 'GOOGLE_SIGNUP', data});\n             setVisibleError(true); \n            setLoading(false); \n            window.location.reload();     \n\n        }else{  \n            dispatch({type: 'GOOGLE_SIGNUP', data});\n        \n            setVisibleSuccess(true);\n        }\n    } catch (error){\n        console.log(error); \n    }\n}\n\n\n\n\n\nexport const loginAction = (formData, navigate, setVisibleError, setLoading) => async (dispatch) => {\n    try{\n        const {data} = await axs.loginApi(formData);\n        console.log(data.message);\n        if (data.message === 'LoginError'){\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n            setVisibleError(true); \n            setLoading(false);                 \n        } else if (data.message === 'RegistrySuccess'){\n           // console.log('RegLogin');\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n            setVisibleError(true); \n            setLoading(false);  \n            window.location.reload();               \n        }else {\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n            setVisibleError(true); //shares ui with success\n           \n        }\n\n    } catch (error){\n        console.log(error);\n    }\n} \n\nexport const verifyAction = (formData, navigate, setVisibleError, setLoading) => async (dispatch) => {\n    try{\n        const {data} = await axs.verifyApi(formData); //shares reducer with auth\n        console.log(data.message);\n        if (data.message === 'AlreadyVerified'){\n           \n           dispatch({type: 'GOOGLE_SIGNUP', data});\n           setVisibleError(true); \n           setLoading(false);                 \n       } else if (data.message === 'OtpError'){\n             console.log(data.message);\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n            setVisibleError(true); \n            setLoading(false);                 \n        } else if(data.message === 'NoUser'){\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n            setLoading(false); \n            setVisibleError(true); //shares ui with success conditions set in UI\n        }else if (data.message === 'ChangeOtpExpired'){\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n            setVisibleError(true); \n            setLoading(false);                 \n        }else if (data.message === 'RegisterOtpExpired'){\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n            setVisibleError(true); \n            setLoading(false);                 \n        }else if (data.message === 'UnknownError'){\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n            setVisibleError(true); \n            setLoading(false);                 \n        }else if(data.message === 'RegistrySuccess'){\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n            setLoading(false); \n            setVisibleError(true); //shares ui with success conditions set in UI\n            window.location.reload();\n        }else if(data.message === 'SecuritySuccess'){\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n            setLoading(false); \n            setVisibleError(true); //shares ui with success conditions set in UI\n        }else if(data.message === 'DeleteSuccess'){\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n            setLoading(false); \n            setVisibleError(true); //shares ui with success conditions set in UI\n        }else {\n            dispatch({type: 'GOOGLE_SIGNUP', data});\n            setVisibleError(true);      \n\n        }\n    } catch (error){\n        console.log(error);\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}