{"ast":null,"code":"var _jsxFileName = \"/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Body/ReviewTipRow.jsx\";\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst reviewTippersAll = useSelector(state => state.reviewsReducer);\nconst availableReviewTippers = reviewTippersAll.filter(reviewer => reviewer.reviewedPostId === diaryId);\nuseEffect(() => {\n  if (!availableReviewTippers.length) {\n    dispatch(getTipsAction(diaryId));\n  }\n}, [dispatch]);\nexport const ReviewTipRow = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: availableReviewTippers.length > 0 && availableReviewTippers.map(reviewTipper => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" break-words p-1 border border-gray-300 bg-gray-100 hover:bg-white\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [reviewTipper.tipperMiniProfile.userName, \": \", reviewTipper.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_c = ReviewTipRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewTipRow\");","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Body/ReviewTipRow.jsx"],"names":["useSelector","reviewTippersAll","state","reviewsReducer","availableReviewTippers","filter","reviewer","reviewedPostId","diaryId","useEffect","length","dispatch","getTipsAction","ReviewTipRow","map","reviewTipper","tipperMiniProfile","userName","amount"],"mappings":";AAAA,SAAQA,WAAR,QAA0B,aAA1B;;;AAEA,MAAMC,gBAAgB,GAAGD,WAAW,CAAEE,KAAD,IAAWA,KAAK,CAACC,cAAlB,CAApC;AACA,MAAMC,sBAAsB,GAAGH,gBAAgB,CAACI,MAAjB,CAAwBC,QAAQ,IAAIA,QAAQ,CAACC,cAAT,KAA4BC,OAAhE,CAA/B;AACAC,SAAS,CAAC,MAAM;AAEZ,MAAG,CAACL,sBAAsB,CAACM,MAA3B,EAAkC;AAE9BC,IAAAA,QAAQ,CAACC,aAAa,CAACJ,OAAD,CAAd,CAAR;AACH;AAEJ,CAPQ,EAON,CAACG,QAAD,CAPM,CAAT;AAQA,OAAO,MAAME,YAAY,GAAG,MAAI;AAC5B,sBACI;AAAA,cACCT,sBAAsB,CAACM,MAAvB,GAAgC,CAAhC,IAAsCN,sBAAsB,CAACU,GAAvB,CAA4BC,YAAD,iBAClE;AAAK,MAAA,SAAS,EAAE,oEAAhB;AAAA,6BACK;AAAA,mBAAIA,YAAY,CAACC,iBAAb,CAA+BC,QAAnC,QAA+CF,YAAY,CAACG,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YADuC;AADvC,mBADJ;AAWH,CAZM;KAAML,Y","sourcesContent":["import {useSelector} from 'react-redux';\n\nconst reviewTippersAll = useSelector((state) => state.reviewsReducer);\nconst availableReviewTippers = reviewTippersAll.filter(reviewer => reviewer.reviewedPostId === diaryId);\nuseEffect(() => {     \n       \n    if(!availableReviewTippers.length){\n        \n        dispatch(getTipsAction(diaryId));    \n    }\n\n}, [dispatch]); \nexport const ReviewTipRow = ()=>{\n    return(\n        <>\n        {availableReviewTippers.length > 0  && availableReviewTippers.map((reviewTipper) =>(\n        <div className= ' break-words p-1 border border-gray-300 bg-gray-100 hover:bg-white'>\n             <p>{reviewTipper.tipperMiniProfile.userName}: {reviewTipper.amount}</p>    \n        </div>  \n          ))\n            \n        } \n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}