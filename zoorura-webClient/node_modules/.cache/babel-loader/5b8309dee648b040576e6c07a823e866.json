{"ast":null,"code":"import * as axs from './axs';\nexport const getMessagesAction = convoId => async dispatch => {\n  try {\n    const {\n      data\n    } = await axs.getMessagesApi(convoId);\n    console.log(data);\n    dispatch({\n      type: 'GET_ALL_MESSAGES',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n};\nexport const postMessagesAction = (messageData, socket, notifier, setLoading) => async dispatch => {\n  console.log(\"Message Action Act\");\n\n  try {\n    console.log(messageData);\n    const {\n      data\n    } = await axs.postMessagesApi(messageData);\n    socket.current.emit(\"sendMessage\", {\n      messageData\n    });\n    dispatch({\n      type: 'POST_MESSAGE',\n      payload: data\n    });\n    setLoading(false);\n    notifier();\n    setProgress(0);\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/Zoorura/Documents/Projects/Zoorura/zoorura-webClient/src/components/Midwares/rdx/actions/messagesAction.js"],"names":["axs","getMessagesAction","convoId","dispatch","data","getMessagesApi","console","log","type","payload","error","postMessagesAction","messageData","socket","notifier","setLoading","postMessagesApi","current","emit","setProgress"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,OAArB;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,OAAD,IAAa,MAAOC,QAAP,IAAoB;AAC9D,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMJ,GAAG,CAACK,cAAJ,CAAmBH,OAAnB,CAArB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEAD,IAAAA,QAAQ,CAAE;AAACK,MAAAA,IAAI,EAAE,kBAAP;AAA2BC,MAAAA,OAAO,EAAEL;AAApC,KAAF,CAAR;AAIH,GARD,CAQE,OAAMM,KAAN,EAAa;AACXJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AAEA,WAAO,KAAP;AACH;AACJ,CAdM;AAiBP,OAAO,MAAMC,kBAAkB,GAAG,CAACC,WAAD,EAAcC,MAAd,EAAsBC,QAAtB,EAAgCC,UAAhC,KAA+C,MAAOZ,QAAP,IAAoB;AACjGG,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AACA,MAAG;AAECD,IAAAA,OAAO,CAACC,GAAR,CAAYK,WAAZ;AACA,UAAM;AAACR,MAAAA;AAAD,QAAS,MAAMJ,GAAG,CAACgB,eAAJ,CAAoBJ,WAApB,CAArB;AAEAC,IAAAA,MAAM,CAACI,OAAP,CAAeC,IAAf,CAAoB,aAApB,EAAmC;AAChCN,MAAAA;AADgC,KAAnC;AAKAT,IAAAA,QAAQ,CAAE;AAACK,MAAAA,IAAI,EAAE,cAAP;AAAuBC,MAAAA,OAAO,EAAEL;AAAhC,KAAF,CAAR;AACAW,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAD,IAAAA,QAAQ;AACRK,IAAAA,WAAW,CAAC,CAAD,CAAX;AACH,GAdD,CAcE,OAAMT,KAAN,EAAa;AACXJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH;AACJ,CAnBM","sourcesContent":["import * as axs from './axs';\n\nexport const getMessagesAction = (convoId) => async (dispatch) => {\n    try{\n        const {data} = await axs.getMessagesApi(convoId);\n        console.log(data);\n\n        dispatch ({type: 'GET_ALL_MESSAGES', payload: data});\n\n        \n\n    } catch(error) {\n        console.log(error);\n\n        return false;\n    }\n}\n\n\nexport const postMessagesAction = (messageData, socket, notifier, setLoading) => async (dispatch) => {\n    console.log(\"Message Action Act\");\n    try{\n\n        console.log(messageData);\n        const {data} = await axs.postMessagesApi(messageData);\n\n        socket.current.emit(\"sendMessage\", {\n           messageData\n        });\n        \n \n        dispatch ({type: 'POST_MESSAGE', payload: data});\n        setLoading(false);\n        notifier();\n        setProgress(0);\n    } catch(error) {  \n        console.log(error);\n    }\n}"]},"metadata":{},"sourceType":"module"}